from aiogram import Router, F
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from ..keyboards.main import get_curator_main_menu_kb
from common.keyboards import get_courses_kb, get_subjects_kb, get_lessons_kb, get_main_menu_back_button
from ..keyboards.homeworks import get_homework_menu_kb, get_groups_kb, get_students_by_homework_kb

class CuratorHomeworkStates(StatesGroup):
    group_stats_result = State()
    student_stats_subject = State()
    student_stats_group = State()
    homework_menu = State()
    student_stats_course = State()
    student_stats_lesson = State()
    student_stats_list = State()
    group_stats_group = State()


router = Router()

@router.callback_query(F.data == "curator_homeworks")
async def show_homework_menu(callback: CallbackQuery, state: FSMContext):
    """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π"""
    await callback.message.edit_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:",
        reply_markup=get_homework_menu_kb()
    )
    await state.set_state(CuratorHomeworkStates.homework_menu)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ —É—á–µ–Ω–∏–∫—É
@router.callback_query(CuratorHomeworkStates.homework_menu, F.data == "hw_student_stats")
async def select_student_stats_course(callback: CallbackQuery, state: FSMContext):
    """–í—ã–±–æ—Ä –∫—É—Ä—Å–∞ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ —É—á–µ–Ω–∏–∫—É"""
    await callback.message.edit_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ –∫—É—Ä—Å:",
        reply_markup=get_courses_kb()
    )
    await state.set_state(CuratorHomeworkStates.student_stats_course)

@router.callback_query(CuratorHomeworkStates.student_stats_course, F.data.startswith("course_"))
async def select_student_stats_group(callback: CallbackQuery, state: FSMContext):
    """–í—ã–±–æ—Ä –≥—Ä—É–ø–ø—ã –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ —É—á–µ–Ω–∏–∫—É"""
    course_id = callback.data.replace("course_", "")
    await state.update_data(selected_course=course_id)
    
    await callback.message.edit_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É:",
        reply_markup=get_groups_kb(course_id)
    )
    await state.set_state(CuratorHomeworkStates.student_stats_group)

@router.callback_query(CuratorHomeworkStates.student_stats_group, F.data.startswith("hw_group_"))
async def select_student_stats_subject(callback: CallbackQuery, state: FSMContext):
    """–í—ã–±–æ—Ä –ø—Ä–µ–¥–º–µ—Ç–∞ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ —É—á–µ–Ω–∏–∫—É"""
    group_id = callback.data.replace("hw_group_", "")
    await state.update_data(selected_group=group_id)
    
    await callback.message.edit_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç:",
        reply_markup=get_subjects_kb()
    )
    await state.set_state(CuratorHomeworkStates.student_stats_subject)

@router.callback_query(CuratorHomeworkStates.student_stats_subject, F.data.startswith("subject_"))
async def select_student_stats_lesson(callback: CallbackQuery, state: FSMContext):
    """–í—ã–±–æ—Ä —É—Ä–æ–∫–∞ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ —É—á–µ–Ω–∏–∫—É"""
    subject_id = callback.data.replace("subject_", "")
    await state.update_data(selected_subject=subject_id)
    
    await callback.message.edit_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ —É—Ä–æ–∫:",
        reply_markup=get_lessons_kb(subject_id)
    )
    await state.set_state(CuratorHomeworkStates.student_stats_lesson)

@router.callback_query(CuratorHomeworkStates.student_stats_lesson, F.data.startswith("lesson_"))
async def show_student_stats_list(callback: CallbackQuery, state: FSMContext):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —É—á–µ–Ω–∏–∫–æ–≤ —Å –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–º–∏ –∏ –Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–º–∏ –î–ó"""
    lesson_id = callback.data.replace("lesson_", "")
    await state.update_data(selected_lesson=lesson_id)
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö
    user_data = await state.get_data()
    course_id = user_data.get("selected_course")
    group_id = user_data.get("selected_group")
    subject_id = user_data.get("selected_subject")
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    course_names = {"geo": "–ì–µ–æ–≥—Ä–∞—Ñ–∏—è", "math": "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞"}
    subject_names = {
        "kz": "–ò—Å—Ç–æ—Ä–∏—è –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞",
        "mathlit": "–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å",
        "math": "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
        "geo": "–ì–µ–æ–≥—Ä–∞—Ñ–∏—è",
        "bio": "–ë–∏–æ–ª–æ–≥–∏—è",
        "chem": "–•–∏–º–∏—è",
        "inf": "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞",
        "world": "–í—Å–µ–º–∏—Ä–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è",
        "read": "–ì—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å —á—Ç–µ–Ω–∏—è"
    }
    lesson_names = {"lesson1": "–ê–ª–∫–∞–Ω—ã", "lesson2": "–ò–∑–æ–º–µ—Ä–∏—è", "lesson3": "–ö–∏—Å–ª–æ—Ç—ã"}
    
    course_name = course_names.get(course_id, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫—É—Ä—Å")
    subject_name = subject_names.get(subject_id, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç")
    lesson_name = lesson_names.get(lesson_id, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —É—Ä–æ–∫")
    
    await callback.message.edit_text(
        f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –î–ó\n"
        f"–ö—É—Ä—Å: {course_name}\n"
        f"–ü—Ä–µ–¥–º–µ—Ç: {subject_name}\n"
        f"–£—Ä–æ–∫: {lesson_name}\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —É—á–µ–Ω–∏–∫–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:",
        reply_markup=get_students_by_homework_kb(lesson_id)
    )
    await state.set_state(CuratorHomeworkStates.student_stats_list)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –≥—Ä—É–ø–ø–µ
@router.callback_query(CuratorHomeworkStates.homework_menu, F.data == "hw_group_stats")
async def select_group_stats_group(callback: CallbackQuery, state: FSMContext):
    """–í—ã–±–æ—Ä –≥—Ä—É–ø–ø—ã –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –≥—Ä—É–ø–ø–µ"""
    await callback.message.edit_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:",
        reply_markup=get_groups_kb()
    )
    await state.set_state(CuratorHomeworkStates.group_stats_group)

@router.callback_query(CuratorHomeworkStates.group_stats_group, F.data.startswith("hw_group_"))
async def show_group_stats(callback: CallbackQuery, state: FSMContext):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –≥—Ä—É–ø–ø–µ"""
    group_id = callback.data.replace("hw_group_", "")
    
    # –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    # –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –≥—Ä—É–ø–ø–µ
    group_data = {
        "group1": {
            "name": "–ò–Ω—Ç–µ–Ω—Å–∏–≤. –ì–µ–æ–≥—Ä–∞—Ñ–∏—è",
            "subject": "–•–∏–º–∏—è",
            "homework_completion": 75,
            "topics": {
                "–ê–ª–∫–∞–Ω—ã": 82,
                "–ò–∑–æ–º–µ—Ä–∏—è": 37,
                "–ö–∏—Å–ª–æ—Ç—ã": 66
            },
            "rating": [
                {"name": "–ê—Ä—É–∂–∞–Ω", "points": 870},
                {"name": "–î–∏–∞–Ω–∞", "points": 800},
                {"name": "–ú–∞–¥–∏—è—Ä", "points": 780}
            ]
        },
        "group2": {
            "name": "–ò–Ω—Ç–µ–Ω—Å–∏–≤. –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
            "subject": "–•–∏–º–∏—è",
            "homework_completion": 80,
            "topics": {
                "–ê–ª–∫–∞–Ω—ã": 78,
                "–ò–∑–æ–º–µ—Ä–∏—è": 42,
                "–ö–∏—Å–ª–æ—Ç—ã": 70
            },
            "rating": [
                {"name": "–ê—Ä–º–∞–Ω", "points": 850},
                {"name": "–ê–ª–∏—è", "points": 820},
                {"name": "–î–∏–∞—Å", "points": 790}
            ]
        }
    }
    
    stats = group_data.get(group_id, {
        "name": "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –≥—Ä—É–ø–ø–∞",
        "subject": "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç",
        "homework_completion": 0,
        "topics": {},
        "rating": []
    })
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å —Ä–µ–π—Ç–∏–Ω–≥–æ–º
    rating_text = ""
    if stats["rating"]:
        rating_text = "üìã –†–µ–π—Ç–∏–Ω–≥ –ø–æ –±–∞–ª–ª–∞–º:\n"
        for i, student in enumerate(stats["rating"], 1):
            rating_text += f"{i}. {student['name']} ‚Äî {student['points']} –±–∞–ª–ª–æ–≤\n"
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å —Ç–µ–º–∞–º–∏
    topics_text = "üìà –°—Ä–µ–¥–Ω–∏–π % –ø–æ–Ω–∏–º–∞–Ω–∏—è –ø–æ –º–∏–∫—Ä–æ—Ç–µ–º–∞–º:\n"
    for topic, percentage in stats["topics"].items():
        topics_text += f"‚Ä¢ {topic} ‚Äî {percentage}%\n"
    
    await callback.message.edit_text(
        f"üìó {stats['subject']}\n"
        f"üìä –°—Ä–µ–¥–Ω–∏–π % –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –î–ó: {stats['homework_completion']}%\n"
        f"{topics_text}\n"
        f"{rating_text}",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            *get_main_menu_back_button()
        ])
    )
    await state.set_state(CuratorHomeworkStates.group_stats_result)

