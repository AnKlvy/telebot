from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from common.keyboards import get_main_menu_back_button, get_universal_back_button


def get_messages_menu_kb() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –º–µ–Ω—é —Å–æ–æ–±—â–µ–Ω–∏–π"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üì© –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", callback_data="individual_message")],
        [InlineKeyboardButton(text="üì¢ –ú–∞—Å—Å–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞", callback_data="mass_message")],
        *get_main_menu_back_button()
    ])

async def get_groups_for_message_kb(user_telegram_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –≥—Ä—É–ø–ø—ã –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≥—Ä—É–ø–ø—ã –∫—É—Ä–∞—Ç–æ—Ä–∞"""
    try:
        from database import UserRepository, CuratorRepository

        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ telegram_id
        user = await UserRepository.get_by_telegram_id(user_telegram_id)

        if not user:
            return InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω", callback_data="user_not_found")],
                *get_main_menu_back_button()
            ])

        # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –∫—É—Ä–∞—Ç–æ—Ä–∞
        curator = await CuratorRepository.get_by_user_id(user.id)

        if not curator:
            return InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="‚ùå –í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∫—É—Ä–∞—Ç–æ—Ä–æ–º", callback_data="not_curator")],
                *get_main_menu_back_button()
            ])

        # –ü–æ–ª—É—á–∞–µ–º –≥—Ä—É–ø–ø—ã –∫—É—Ä–∞—Ç–æ—Ä–∞
        groups = await CuratorRepository.get_curator_groups(curator.id)

        if not groups:
            return InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="‚ùå –£ –≤–∞—Å –Ω–µ—Ç –≥—Ä—É–ø–ø", callback_data="no_groups")],
                *get_main_menu_back_button()
            ])

        buttons = []
        for group in groups:
            group_name = f"{group.name}"
            if group.subject:
                group_name += f" ({group.subject.name})"

            buttons.append([
                InlineKeyboardButton(
                    text=group_name,
                    callback_data=f"msg_group_{group.id}"
                )
            ])

        buttons.extend(get_main_menu_back_button())
        return InlineKeyboardMarkup(inline_keyboard=buttons)

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≥—Ä—É–ø–ø –∫—É—Ä–∞—Ç–æ—Ä–∞: {e}")
        import traceback
        traceback.print_exc()
        return InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≥—Ä—É–ø–ø", callback_data="error_groups")],
            *get_main_menu_back_button()
        ])

async def get_students_for_message_kb(group_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —É—á–µ–Ω–∏–∫–∞ –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è"""
    try:
        from database import StudentRepository

        # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –≥—Ä—É–ø–ø—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        students = await StudentRepository.get_by_group(group_id)

        if not students:
            return InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="‚ùå –°—Ç—É–¥–µ–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã", callback_data="no_students")],
                *get_main_menu_back_button()
            ])

        buttons = []
        for student in students:
            buttons.append([
                InlineKeyboardButton(
                    text=student.user.name,
                    callback_data=f"msg_student_{student.id}"
                )
            ])

        buttons.extend(get_main_menu_back_button())
        return InlineKeyboardMarkup(inline_keyboard=buttons)

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤: {e}")
        return InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤", callback_data="error_students")],
            *get_main_menu_back_button()
        ])

def get_confirm_message_kb() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç—å", callback_data="send_message")],
        get_universal_back_button("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å")
    ])