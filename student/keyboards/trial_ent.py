from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from common.keyboards import get_main_menu_back_button, get_universal_back_button


def get_trial_ent_start_kb() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±–Ω–æ–≥–æ –ï–ù–¢"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚ñ∂Ô∏è –ù–∞—á–∞—Ç—å –ø—Ä–æ–±–Ω—ã–π –ï–ù–¢", callback_data="start_trial_ent")],
        *get_main_menu_back_button()
    ])

def get_required_subjects_kb() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ò—Å—Ç–æ—Ä–∏—è –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞", callback_data="req_sub_kz")],
        [InlineKeyboardButton(text="–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å", callback_data="req_sub_mathlit")],
        [InlineKeyboardButton(text="–ò—Å—Ç–æ—Ä–∏—è –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞ –∏ –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å", callback_data="req_sub_both")],
        *get_main_menu_back_button()
    ])

def get_profile_subjects_kb() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –ø—Ä–æ—Ñ–∏–ª—å–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", callback_data="prof_sub_math")],
        [InlineKeyboardButton(text="–ì–µ–æ–≥—Ä–∞—Ñ–∏—è", callback_data="prof_sub_geo")],
        [InlineKeyboardButton(text="–ë–∏–æ–ª–æ–≥–∏—è", callback_data="prof_sub_bio")],
        [InlineKeyboardButton(text="–•–∏–º–∏—è", callback_data="prof_sub_chem")],
        [InlineKeyboardButton(text="–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", callback_data="prof_sub_inf")],
        [InlineKeyboardButton(text="–í—Å–µ–º–∏—Ä–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è", callback_data="prof_sub_world")],
        [InlineKeyboardButton(text="–ù–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤", callback_data="prof_sub_none")],
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_required_subjects")]
    ])

def get_second_profile_subject_kb(first_subject: str) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –≤—Ç–æ—Ä–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—å–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞"""
    buttons = []
    
    # –°–ª–æ–≤–∞—Ä—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è callback_data –∏ –Ω–∞–∑–≤–∞–Ω–∏–π –ø—Ä–µ–¥–º–µ—Ç–æ–≤
    subjects = {
        "prof_sub_math": "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
        "prof_sub_geo": "–ì–µ–æ–≥—Ä–∞—Ñ–∏—è",
        "prof_sub_bio": "–ë–∏–æ–ª–æ–≥–∏—è",
        "prof_sub_chem": "–•–∏–º–∏—è",
        "prof_sub_inf": "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞",
        "prof_sub_world": "–í—Å–µ–º–∏—Ä–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è"
    }
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã, –∫—Ä–æ–º–µ —É–∂–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ
    for callback, name in subjects.items():
        if callback != first_subject:
            buttons.append([InlineKeyboardButton(text=name, callback_data=f"second_{callback}")])
    
    buttons.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_profile_subjects")])
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_test_answers_kb() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤–æ–ø—Ä–æ—Å —Ç–µ—Å—Ç–∞"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="A", callback_data="answer_A")],
        [InlineKeyboardButton(text="B", callback_data="answer_B")],
        [InlineKeyboardButton(text="C", callback_data="answer_C")],
        [InlineKeyboardButton(text="D", callback_data="answer_D")],
        # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
        [InlineKeyboardButton(text="‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ", callback_data="separator")],
        [InlineKeyboardButton(text="‚ùå –ó–∞–≤–µ—Ä—à–∏—Ç—å —Ç–µ—Å—Ç", callback_data="end_trial_ent")]
    ])

def get_after_trial_ent_kb() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ–±–Ω–æ–≥–æ –ï–ù–¢"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìä –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∞–ª–∏—Ç–∏–∫—É", callback_data="view_analytics")],
        [InlineKeyboardButton(text="üîÑ –ü—Ä–æ–π—Ç–∏ –µ—â—ë —Ä–∞–∑", callback_data="retry_trial_ent")],
        *get_main_menu_back_button()
    ])

def get_analytics_subjects_kb(subjects: list) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏"""
    buttons = []
    
    for subject in subjects:
        if subject == "kz":
            buttons.append([InlineKeyboardButton(text="–ò—Å—Ç–æ—Ä–∏—è –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞", callback_data="analytics_kz")])
        elif subject == "mathlit":
            buttons.append([InlineKeyboardButton(text="–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å", callback_data="analytics_mathlit")])
        elif subject == "math":
            buttons.append([InlineKeyboardButton(text="–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", callback_data="analytics_math")])
        elif subject == "geo":
            buttons.append([InlineKeyboardButton(text="–ì–µ–æ–≥—Ä–∞—Ñ–∏—è", callback_data="analytics_geo")])
        elif subject == "bio":
            buttons.append([InlineKeyboardButton(text="–ë–∏–æ–ª–æ–≥–∏—è", callback_data="analytics_bio")])
        elif subject == "chem":
            buttons.append([InlineKeyboardButton(text="–•–∏–º–∏—è", callback_data="analytics_chem")])
        elif subject == "inf":
            buttons.append([InlineKeyboardButton(text="–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", callback_data="analytics_inf")])
        elif subject == "world":
            buttons.append([InlineKeyboardButton(text="–í—Å–µ–º–∏—Ä–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è", callback_data="analytics_world")])
    
    buttons.append(*get_main_menu_back_button())
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_back_to_analytics_kb() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –≤—ã–±–æ—Ä—É –ø—Ä–µ–¥–º–µ—Ç–∞ –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏"""
    return InlineKeyboardMarkup(inline_keyboard=[
        get_universal_back_button("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –ø—Ä–µ–¥–º–µ—Ç–∞", "back_to_analytics_subjects"),
        get_universal_back_button("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "back_to_main")
    ])