from aiogram import Router, F
from aiogram.types import CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from ..keyboards.progress import get_progress_menu_kb, get_subjects_progress_kb, get_back_to_progress_kb
# –ò–º–ø–æ—Ä—Ç—ã —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω—ã –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏

router = Router()

class ProgressStates(StatesGroup):
    main = State()
    subjects = State()
    common_stats = State()
    subject_details = State()

@router.callback_query(F.data == "progress")
async def show_progress_menu(callback: CallbackQuery, state: FSMContext):
    """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é –ø—Ä–æ–≥—Ä–µ—Å—Å–∞"""
    await callback.message.edit_text(
        "–ß—Ç–æ –∏–º–µ–Ω–Ω–æ —Ö–æ—á–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å? –í—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤:",
        reply_markup=get_progress_menu_kb()
    )
    await state.set_state(ProgressStates.main)

@router.callback_query(ProgressStates.main, F.data == "general_stats")
async def show_general_stats(callback: CallbackQuery, state: FSMContext):
    """–ü–æ–∫–∞–∑–∞—Ç—å –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
    from database import StudentRepository

    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—É–¥–µ–Ω—Ç–∞ –ø–æ Telegram ID
    student = await StudentRepository.get_by_telegram_id(callback.from_user.id)

    if not student:
        await callback.message.edit_text(
            "‚ùå –°—Ç—É–¥–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ",
            reply_markup=get_back_to_progress_kb()
        )
        return

    # –ü–æ–ª—É—á–∞–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å—Ç—É–¥–µ–Ω—Ç–∞
    general_stats = await StudentRepository.get_general_stats(student.id)

    await callback.message.edit_text(
        f"–í–æ—Ç —Ç–≤–æ—è –∫—Ä–∞—Ç–∫–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ üëá\n"
        f"üìä –ë–∞–ª–ª—ã: {general_stats.get('total_points', 0)}\n"
        f"üéØ –£—Ä–æ–≤–µ–Ω—å: {student.level}\n"
        f"üìã –í—ã–ø–æ–ª–Ω–µ–Ω–æ –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π: {general_stats.get('total_completed', 0)}",
        reply_markup=get_back_to_progress_kb()
    )
    await state.set_state(ProgressStates.common_stats)

@router.callback_query(ProgressStates.main, F.data == "topics_understanding")
async def show_subjects_list(callback: CallbackQuery, state: FSMContext):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–Ω–∏–º–∞–Ω–∏—è –ø–æ —Ç–µ–º–∞–º"""
    await callback.message.edit_text(
        "–í—ã–±–µ—Ä–∏ –ø—Ä–µ–¥–º–µ—Ç, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å % –ø–æ–Ω–∏–º–∞–Ω–∏—è –ø–æ –º–∏–∫—Ä–æ—Ç–µ–º–∞–º:",
        reply_markup=await get_subjects_progress_kb()
    )
    await state.set_state(ProgressStates.subjects)

@router.callback_query(ProgressStates.subjects, F.data.startswith("progress_sub_"))
async def show_subject_progress(callback: CallbackQuery, state: FSMContext):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –ø—Ä–µ–¥–º–µ—Ç—É"""
    subject_id = callback.data.replace("progress_sub_", "")

    # –ü–æ–ª—É—á–∞–µ–º ID —Å—Ç—É–¥–µ–Ω—Ç–∞ –∏–∑ Telegram ID
    from database import StudentRepository, SubjectRepository
    student = await StudentRepository.get_by_telegram_id(callback.from_user.id)

    if not student:
        await callback.message.edit_text(
            "‚ùå –°—Ç—É–¥–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ",
            reply_markup=get_back_to_progress_kb()
        )
        return

    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞
    subject = await SubjectRepository.get_by_id(int(subject_id))
    subject_name = subject.name if subject else "–ü—Ä–µ–¥–º–µ—Ç"

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    from common.analytics.keyboards import get_student_microtopics_kb

    await callback.message.edit_text(
        f"üìä –í—ã–±–µ—Ä–∏ —Ç–∏–ø —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –ø—Ä–µ–¥–º–µ—Ç—É {subject_name}:",
        reply_markup=get_student_microtopics_kb(student.id, int(subject_id))
    )
    await state.set_state(ProgressStates.subject_details)

# –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
@router.callback_query(ProgressStates.subject_details, F.data.startswith("microtopics_detailed_"))
async def show_detailed_microtopics(callback: CallbackQuery, state: FSMContext):
    """–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –º–∏–∫—Ä–æ—Ç–µ–º–∞–º"""
    from common.statistics import get_student_microtopics_detailed

    # –ò–∑–≤–ª–µ–∫–∞–µ–º student_id –∏ subject_id –∏–∑ callback_data
    parts = callback.data.split("_")
    if len(parts) >= 4:
        student_id = int(parts[2])
        subject_id = int(parts[3])

        # –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        result_text = await get_student_microtopics_detailed(student_id, subject_id)

        await callback.message.edit_text(
            result_text,
            reply_markup=get_back_to_progress_kb()
        )
    else:
        await callback.message.edit_text(
            "‚ùå –û—à–∏–±–∫–∞ –≤ –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–∞",
            reply_markup=get_back_to_progress_kb()
        )

@router.callback_query(ProgressStates.subject_details, F.data.startswith("microtopics_summary_"))
async def show_summary_microtopics(callback: CallbackQuery, state: FSMContext):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å–≤–æ–¥–∫—É –ø–æ —Å–∏–ª—å–Ω—ã–º –∏ —Å–ª–∞–±—ã–º —Ç–µ–º–∞–º"""
    from common.statistics import get_student_strong_weak_summary

    # –ò–∑–≤–ª–µ–∫–∞–µ–º student_id –∏ subject_id –∏–∑ callback_data
    parts = callback.data.split("_")
    if len(parts) >= 4:
        student_id = int(parts[2])
        subject_id = int(parts[3])

        # –ü–æ–ª—É—á–∞–µ–º —Å–≤–æ–¥–∫—É –ø–æ —Å–∏–ª—å–Ω—ã–º –∏ —Å–ª–∞–±—ã–º —Ç–µ–º–∞–º
        result_text = await get_student_strong_weak_summary(student_id, subject_id)

        await callback.message.edit_text(
            result_text,
            reply_markup=get_back_to_progress_kb()
        )
    else:
        await callback.message.edit_text(
            "‚ùå –û—à–∏–±–∫–∞ –≤ –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–∞",
            reply_markup=get_back_to_progress_kb()
        )