#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–ø–ª–æ—è —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞ –Ω–∞ Beget

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ root –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
if [ "$EUID" -ne 0 ] && ! command -v docker &> /dev/null; then
    echo "‚ö†Ô∏è –î–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Docker —Ç—Ä–µ–±—É—é—Ç—Å—è –ø—Ä–∞–≤–∞ root"
    echo "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å sudo: sudo ./deploy.sh"
    echo "–ò–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –≤—Ä—É—á–Ω—É—é –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞"
    exit 1
fi

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Docker
install_docker() {
    echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker..."

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤
    if [ -f /etc/os-release ]; then
        . /etc/os-release
        OS=$NAME
        VER=$VERSION_ID
    fi

    # –î–ª—è Kali Linux –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É
    if [[ "$OS" == *"Kali"* ]]; then
        echo "üêâ –û–±–Ω–∞—Ä—É–∂–µ–Ω Kali Linux, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É..."

        # –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞–∫–µ—Ç—ã
        sudo apt update

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        sudo apt install -y apt-transport-https ca-certificates curl gnupg lsb-release

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–ª—é—á Docker
        curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

        # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π Docker (–∏—Å–ø–æ–ª—å–∑—É–µ–º Debian bullseye –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
        echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian bullseye stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ø–∞–∫–µ—Ç–æ–≤
        sudo apt update

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker
        sudo apt install -y docker-ce docker-ce-cli containerd.io

        # –°–æ–∑–¥–∞–µ–º –≥—Ä—É–ø–ø—É docker –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        sudo groupadd docker 2>/dev/null || true

        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É docker
        sudo usermod -aG docker $USER

        # –ó–∞–ø—É—Å–∫–∞–µ–º –∏ –≤–∫–ª—é—á–∞–µ–º Docker
        sudo systemctl start docker
        sudo systemctl enable docker

    else
        # –î–ª—è –¥—Ä—É–≥–∏—Ö –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É
        curl -fsSL https://get.docker.com -o get-docker.sh
        sudo sh get-docker.sh
        sudo usermod -aG docker $USER
        rm get-docker.sh
    fi

    echo "‚úÖ Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
}

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Docker Compose
install_docker_compose() {
    echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker Compose..."

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É
    ARCH=$(uname -m)
    if [ "$ARCH" = "x86_64" ]; then
        ARCH="x86_64"
    elif [ "$ARCH" = "aarch64" ]; then
        ARCH="aarch64"
    else
        echo "‚ö†Ô∏è –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: $ARCH"
        echo "–ü–æ–ø—Ä–æ–±—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —á–µ—Ä–µ–∑ apt..."
        sudo apt update
        sudo apt install -y docker-compose
        return
    fi

    # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –≤–µ—Ä—Å–∏—é
    COMPOSE_VERSION=$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep 'tag_name' | cut -d\" -f4)

    if [ -z "$COMPOSE_VERSION" ]; then
        echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≤–µ—Ä—Å–∏—é Docker Compose, –∏—Å–ø–æ–ª—å–∑—É–µ–º v2.20.2"
        COMPOSE_VERSION="v2.20.2"
    fi

    echo "üì• –°–∫–∞—á–∏–≤–∞–µ–º Docker Compose $COMPOSE_VERSION..."
    sudo curl -L "https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-$(uname -s)-${ARCH}" -o /usr/local/bin/docker-compose

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
    if [ $? -eq 0 ]; then
        sudo chmod +x /usr/local/bin/docker-compose

        # –°–æ–∑–¥–∞–µ–º —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫—É—é —Å—Å—ã–ª–∫—É –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
        sudo ln -sf /usr/local/bin/docker-compose /usr/bin/docker-compose 2>/dev/null || true

        echo "‚úÖ Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        echo "‚ùå –û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è Docker Compose"
        echo "–ü–æ–ø—Ä–æ–±—É–µ–º —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —á–µ—Ä–µ–∑ apt..."
        sudo apt update
        sudo apt install -y docker-compose
    fi
}

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Git
install_git() {
    echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Git..."
    sudo apt update
    sudo apt install -y git
    echo "‚úÖ Git —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
}

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Certbot
install_certbot() {
    echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Certbot..."
    sudo apt update
    sudo apt install -y certbot
    echo "‚úÖ Certbot —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker
if ! command -v docker &> /dev/null; then
    echo "‚ö†Ô∏è Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    read -p "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Docker –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏? (y/n): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        install_docker
        echo "üîÑ –ü–µ—Ä–µ–∑–∞–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∞–≤ Docker"
        echo "–ó–∞—Ç–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞"
        exit 0
    else
        echo "‚ùå Docker –Ω–µ–æ–±—Ö–æ–¥–∏–º –¥–ª—è —Ä–∞–±–æ—Ç—ã. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤—Ä—É—á–Ω—É—é –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞."
        exit 1
    fi
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker Compose
if ! command -v docker-compose &> /dev/null; then
    echo "‚ö†Ô∏è Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    read -p "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Docker Compose –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏? (y/n): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        install_docker_compose
    else
        echo "‚ùå Docker Compose –Ω–µ–æ–±—Ö–æ–¥–∏–º –¥–ª—è —Ä–∞–±–æ—Ç—ã. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –≤—Ä—É—á–Ω—É—é –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞."
        exit 1
    fi
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Git
if ! command -v git &> /dev/null; then
    echo "‚ö†Ô∏è Git –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    read -p "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Git –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏? (y/n): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        install_git
    fi
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Certbot
if ! command -v certbot &> /dev/null; then
    echo "‚ö†Ô∏è Certbot –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (–Ω—É–∂–µ–Ω –¥–ª—è SSL)"
    read -p "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Certbot –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏? (y/n): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        install_certbot
    fi
fi

echo "‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è
if [ ! -f /etc/telebot/env ]; then
    echo "‚ùå –§–∞–π–ª /etc/telebot/env –Ω–µ –Ω–∞–π–¥–µ–Ω."
    read -p "–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è —Å–µ–π—á–∞—Å? (y/n): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        chmod +x scripts/setup_env.sh
        sudo ./scripts/setup_env.sh
        echo "üìù –¢–µ–ø–µ—Ä—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª: sudo nano /etc/telebot/env"
        echo "–ü–æ—Å–ª–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞"
        exit 0
    else
        echo "üìù –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø–æ–∑–∂–µ: chmod +x scripts/setup_env.sh && sudo ./scripts/setup_env.sh"
        echo "üìù –ó–∞—Ç–µ–º –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ: sudo nano /etc/telebot/env"
        exit 1
    fi
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ª–æ–≥–æ–≤
if [ ! -d "logs" ]; then
    echo "üìÅ –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤..."
    mkdir -p logs
    mkdir -p logs/nginx
    chmod -R 755 logs
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –¥–ª—è webhook —Ä–µ–∂–∏–º–∞
if grep -q "WEBHOOK_MODE=true" /etc/telebot/env; then
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è SSL, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if [ ! -d "nginx/ssl" ]; then
        echo "üìÅ –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤..."
        mkdir -p nginx/ssl
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
    if [ ! -f "nginx/ssl/fullchain.pem" ] || [ ! -f "nginx/ssl/privkey.pem" ]; then
        echo "‚ö†Ô∏è –†–µ–∂–∏–º webhook –≤–∫–ª—é—á–µ–Ω, –Ω–æ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        read -p "–ù–∞—Å—Ç—Ä–æ–∏—Ç—å SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã —Å–µ–π—á–∞—Å? (y/n): " -n 1 -r
        echo
        if [[ $REPLY =~ ^[Yy]$ ]]; then
            chmod +x scripts/setup_ssl.sh
            sudo ./scripts/setup_ssl.sh
        else
            echo "‚ö†Ô∏è –ë–µ–∑ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ webhook —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ –±—É–¥–µ—Ç"
            echo "üìù –ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø–æ–∑–∂–µ: chmod +x scripts/setup_ssl.sh && sudo ./scripts/setup_ssl.sh"
        fi
    else
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞–º
        if [ "$(stat -c %a nginx/ssl/fullchain.pem)" != "644" ] || [ "$(stat -c %a nginx/ssl/privkey.pem)" != "600" ]; then
            echo "üîê –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞–º..."
            chmod 644 nginx/ssl/fullchain.pem
            chmod 600 nginx/ssl/privkey.pem
        fi
    fi
fi

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker-compose down

# –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–∑—ã
echo "üóëÔ∏è –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–∑—ã..."
docker-compose down --rmi all

# –°–æ–±–∏—Ä–∞–µ–º –Ω–æ–≤—ã–µ –æ–±—Ä–∞–∑—ã
echo "üî® –°–æ–±–∏—Ä–∞–µ–º –Ω–æ–≤—ã–µ –æ–±—Ä–∞–∑—ã..."
if ! docker-compose build --no-cache; then
    echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ –æ–±—Ä–∞–∑–æ–≤"
    read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –æ—à–∏–±–∫–∏? (y/n): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        exit 1
    fi
fi

# –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo "‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
if ! docker-compose up -d; then
    echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
    docker-compose logs
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
echo "üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker-compose ps

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
sleep 10

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã
if docker-compose ps | grep -q "Up"; then
    echo "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ"

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º nginx
    if docker-compose ps nginx | grep -q "Up"; then
        echo "‚úÖ Nginx –∑–∞–ø—É—â–µ–Ω"
    else
        echo "‚ö†Ô∏è Nginx –Ω–µ –∑–∞–ø—É—â–µ–Ω, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"
    fi

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–æ—Ç–∞
    if docker-compose ps bot | grep -q "Up"; then
        echo "‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω"
    else
        echo "‚ö†Ô∏è –ë–æ—Ç –Ω–µ –∑–∞–ø—É—â–µ–Ω, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏"
    fi

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    if docker-compose ps postgres | grep -q "Up"; then
        echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø—É—â–µ–Ω–∞"
    else
        echo "‚ö†Ô∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"
    fi
else
    echo "‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
    docker-compose logs
    exit 1
fi

echo ""
echo "üéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω!"
echo "üìù –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤: docker-compose logs -f bot"
echo "üåê –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ nginx: docker-compose logs -f nginx"
echo "üõë –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: docker-compose down"

# –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫
read -p "–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–µ —Å–µ—Ä–≤–µ—Ä–∞? (y/n): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    if [ -f "scripts/setup_autostart.sh" ]; then
        chmod +x scripts/setup_autostart.sh
        ./scripts/setup_autostart.sh
    else
        echo "‚ùå –°–∫—Ä–∏–ø—Ç scripts/setup_autostart.sh –Ω–µ –Ω–∞–π–¥–µ–Ω"
        echo "üìù –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ –≤—Ä—É—á–Ω—É—é:"
        echo "   sudo nano /etc/systemd/system/telebot.service"
        echo "   sudo systemctl enable telebot.service"
        echo "   sudo systemctl start telebot.service"
    fi
fi
