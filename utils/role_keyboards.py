"""
–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–º–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞–º–∏ (ReplyKeyboardMarkup) –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
"""
import logging
from typing import Dict
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove


class RoleKeyboardsManager:
    """–ú–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö –∫–ª–∞–≤–∏–∞—Ç—É—Ä –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    
    def __init__(self):
        # –£–±–∏—Ä–∞–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ - –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–æ–ª–∂–Ω–∞ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å—Å—è –ø—Ä–∏ –∫–∞–∂–¥–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
        pass
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –∫–∞–∂–¥–æ–π —Ä–æ–ª–∏
        self._role_keyboards = {
            "admin": ReplyKeyboardMarkup(
                keyboard=[
                    [KeyboardButton(text="–∞–¥–º–∏–Ω")],
                    [KeyboardButton(text="–º–µ–Ω–µ–¥–∂–µ—Ä"), KeyboardButton(text="–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å")],
                    [KeyboardButton(text="–∫—É—Ä–∞—Ç–æ—Ä"), KeyboardButton(text="—É—á–µ–Ω–∏–∫")]
                ],
                resize_keyboard=True,
                persistent=True
            ),
            # –î–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Ä–æ–ª–µ–π - —É–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
            "manager": None,
            "curator": None,
            "teacher": None,
            "student": None,
            "new_user": None
        }
    
    async def set_keyboard_for_user(self, message, role: str) -> bool:
        """
        –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ—Å—Ç–æ—è–Ω–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –µ–≥–æ —Ä–æ–ª–∏

        Args:
            message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
            role: –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

        Returns:
            bool: True –µ—Å–ª–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –±—ã–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞
        """
        from aiogram.types import ReplyKeyboardRemove

        try:
            # –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã –ø–æ–ª—É—á–∞—é—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
            if role == "admin":
                keyboard = self._role_keyboards.get("admin")
                await message.answer("üîÑ –†–æ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω–∞", reply_markup=keyboard)
            else:
                # –î–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Ä–æ–ª–µ–π —É–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
                await message.answer("üîÑ –†–æ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω–∞", reply_markup=ReplyKeyboardRemove())

            logging.info(f"‚úÖ –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}, —Ä–æ–ª—å: {role}")
            return True

        except Exception as e:
            logging.error(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.id}: {e}")
            return False
    
    async def remove_keyboard_for_user(self, message) -> bool:
        """
        –£–¥–∞–ª–∏—Ç—å –ø–æ—Å—Ç–æ—è–Ω–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        
        Args:
            message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
            
        Returns:
            bool: True –µ—Å–ª–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ
        """
        user_id = message.from_user.id
        
        try:
            # –£–¥–∞–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
            await message.answer(
                "üóëÔ∏è –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–¥–∞–ª–µ–Ω–∞",
                reply_markup=ReplyKeyboardRemove()
            )
            
            # –ö—ç—à –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
            
            logging.info(f"‚úÖ –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–¥–∞–ª–µ–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
            return True
            
        except Exception as e:
            logging.error(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
            return False
    
    def get_keyboard_for_role(self, role: str) -> ReplyKeyboardMarkup:
        """
        –ü–æ–ª—É—á–∏—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Ä–æ–ª–∏

        Args:
            role: –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

        Returns:
            ReplyKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ä–æ–ª–∏
        """
        if role == "admin":
            return self._role_keyboards.get("admin")
        else:
            from aiogram.types import ReplyKeyboardRemove
            return ReplyKeyboardRemove()

    def get_pending_keyboard(self):
        """–ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É"""
        return getattr(self, '_pending_keyboard', None)

    def should_update_keyboard(self, user_id: int, role: str) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –Ω—É–∂–Ω–æ –ª–∏ –æ–±–Ω–æ–≤–ª—è—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        if not hasattr(self, '_user_keyboards'):
            self._user_keyboards = {}

        current_role = self._user_keyboards.get(user_id)
        return current_role != role

    def get_reply_markup_for_role(self, role: str):
        """–ü–æ–ª—É—á–∏—Ç—å reply_markup –¥–ª—è —Ä–æ–ª–∏ (–¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞—Ö)"""
        if role == "admin":
            return self._role_keyboards.get("admin")
        else:
            from aiogram.types import ReplyKeyboardRemove
            return ReplyKeyboardRemove()
    
    def clear_cache(self):
        """–ö—ç—à –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –Ω–æ –º–µ—Ç–æ–¥ –æ—Å—Ç–∞–≤–ª–µ–Ω –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏"""
        logging.info("üóëÔ∏è –ö—ç—à –∫–ª–∞–≤–∏–∞—Ç—É—Ä –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è")

    def get_cache_info(self) -> Dict[str, int]:
        """
        –ö—ç—à –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –Ω–æ –º–µ—Ç–æ–¥ –æ—Å—Ç–∞–≤–ª–µ–Ω –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏

        Returns:
            Dict[str, int]: –ü—É—Å—Ç–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        """
        return {}


# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä
role_keyboards_manager = RoleKeyboardsManager()
