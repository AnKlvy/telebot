from aiogram import Router, F
from aiogram.types import CallbackQuery, Message
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.filters import StateFilter

from admin.utils.common import (
    groups_db, subjects_db, add_group, remove_group,
    get_subjects_list_kb, get_groups_list_kb, get_confirmation_kb
)
from common.keyboards import get_home_kb

router = Router()

class AdminGroupsStates(StatesGroup):
    # –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≥—Ä—É–ø–ø—ã
    enter_group_name = State()
    select_group_subject = State()
    confirm_add_group = State()
    
    # –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≥—Ä—É–ø–ø—ã
    select_subject_for_group_deletion = State()
    select_group_to_delete = State()
    confirm_delete_group = State()

# === –î–û–ë–ê–í–õ–ï–ù–ò–ï –ì–†–£–ü–ü–´ ===

@router.callback_query(F.data == "add_group")
async def start_add_group(callback: CallbackQuery, state: FSMContext):
    """–ù–∞—á–∞—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø—ã"""
    await callback.message.edit_text(
        text="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã:",
        reply_markup=get_home_kb()
    )
    await state.set_state(AdminGroupsStates.enter_group_name)

@router.message(StateFilter(AdminGroupsStates.enter_group_name))
async def process_group_name(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–≤–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã"""
    group_name = message.text.strip()
    
    await state.update_data(group_name=group_name)
    await state.set_state(AdminGroupsStates.select_group_subject)
    
    await message.answer(
        text=f"–ì—Ä—É–ø–ø–∞: {group_name}\n\n–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –≥—Ä—É–ø–ø–∞:",
        reply_markup=get_subjects_list_kb("group_subject")
    )

@router.callback_query(AdminGroupsStates.select_group_subject, F.data.startswith("group_subject_"))
async def select_subject_for_group(callback: CallbackQuery, state: FSMContext):
    """–í—ã–±—Ä–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è –≥—Ä—É–ø–ø—ã"""
    subject = callback.data.replace("group_subject_", "")
    data = await state.get_data()
    group_name = data.get("group_name", "")
    
    await state.update_data(group_subject=subject)
    await state.set_state(AdminGroupsStates.confirm_add_group)
    
    await callback.message.edit_text(
        text=f"üìã –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã:\n\n"
             f"–ù–∞–∑–≤–∞–Ω–∏–µ: {group_name}\n"
             f"–ü—Ä–µ–¥–º–µ—Ç: {subject}",
        reply_markup=get_confirmation_kb("add", "group")
    )

@router.callback_query(AdminGroupsStates.confirm_add_group, F.data.startswith("confirm_add_group"))
async def confirm_add_group(callback: CallbackQuery, state: FSMContext):
    """–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø—ã"""
    data = await state.get_data()
    group_name = data.get("group_name", "")
    subject = data.get("group_subject", "")
    
    success = add_group(group_name, subject)
    
    if success:
        await callback.message.edit_text(
            text=f"‚úÖ –ì—Ä—É–ø–ø–∞ '{group_name}' —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–∞ '{subject}'!",
            reply_markup=get_home_kb()
        )
    else:
        await callback.message.edit_text(
            text=f"‚ùå –ì—Ä—É–ø–ø–∞ '{group_name}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–∞ '{subject}'!",
            reply_markup=get_home_kb()
        )
    
    await state.clear()

# === –£–î–ê–õ–ï–ù–ò–ï –ì–†–£–ü–ü–´ ===

@router.callback_query(F.data == "remove_group")
async def start_remove_group(callback: CallbackQuery, state: FSMContext):
    """–ù–∞—á–∞—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø—ã"""
    await callback.message.edit_text(
        text="–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç:",
        reply_markup=get_subjects_list_kb("group_delete_subject")
    )
    await state.set_state(AdminGroupsStates.select_subject_for_group_deletion)

@router.callback_query(AdminGroupsStates.select_subject_for_group_deletion, F.data.startswith("group_delete_subject_"))
async def select_subject_for_group_deletion(callback: CallbackQuery, state: FSMContext):
    """–í—ã–±—Ä–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≥—Ä—É–ø–ø—ã"""
    subject = callback.data.replace("group_delete_subject_", "")
    
    await state.update_data(deletion_subject=subject)
    await state.set_state(AdminGroupsStates.select_group_to_delete)
    
    await callback.message.edit_text(
        text=f"–ü—Ä–µ–¥–º–µ—Ç: {subject}\n\n–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:",
        reply_markup=get_groups_list_kb("delete_group", subject)
    )

@router.callback_query(AdminGroupsStates.select_group_to_delete, F.data.startswith("delete_group_"))
async def select_group_to_delete(callback: CallbackQuery, state: FSMContext):
    """–í—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è"""
    group_name = callback.data.replace("delete_group_", "")
    data = await state.get_data()
    subject = data.get("deletion_subject", "")
    
    await state.update_data(group_to_delete=group_name)
    await state.set_state(AdminGroupsStates.confirm_delete_group)
    
    await callback.message.edit_text(
        text=f"üóë –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –≥—Ä—É–ø–ø—ã:\n\n"
             f"–ì—Ä—É–ø–ø–∞: {group_name}\n"
             f"–ü—Ä–µ–¥–º–µ—Ç: {subject}\n\n"
             f"‚ö†Ô∏è –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!",
        reply_markup=get_confirmation_kb("delete", "group", group_name)
    )

@router.callback_query(AdminGroupsStates.confirm_delete_group, F.data.startswith("confirm_delete_group"))
async def confirm_delete_group(callback: CallbackQuery, state: FSMContext):
    """–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø—ã"""
    data = await state.get_data()
    group_name = data.get("group_to_delete", "")
    subject = data.get("deletion_subject", "")
    
    success = remove_group(group_name, subject)
    
    if success:
        await callback.message.edit_text(
            text=f"‚úÖ –ì—Ä—É–ø–ø–∞ '{group_name}' —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞ –∏–∑ –ø—Ä–µ–¥–º–µ—Ç–∞ '{subject}'!",
            reply_markup=get_home_kb()
        )
    else:
        await callback.message.edit_text(
            text=f"‚ùå –ì—Ä—É–ø–ø–∞ '{group_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –ø—Ä–µ–¥–º–µ—Ç–µ '{subject}'!",
            reply_markup=get_home_kb()
        )
    
    await state.clear()

# === –û–¢–ú–ï–ù–ê –î–ï–ô–°–¢–í–ò–ô ===

@router.callback_query(F.data.startswith("cancel_add_group") | F.data.startswith("cancel_delete_group"))
async def cancel_group_action(callback: CallbackQuery, state: FSMContext):
    """–û—Ç–º–µ–Ω–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ —Å –≥—Ä—É–ø–ø–æ–π"""
    await callback.message.edit_text(
        text="‚ùå –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ",
        reply_markup=get_home_kb()
    )
    await state.clear()
