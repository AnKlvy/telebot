import logging
from aiogram import Router, F
from aiogram.types import CallbackQuery, Message
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.filters import StateFilter

from admin.utils.common import add_subject, remove_subject, get_confirmation_kb, get_subjects_list_kb, get_subjects_list, get_subject_by_id
from common.keyboards import back_to_main_button, get_home_kb

async def log(name, role, state):
    logging.info(f"–í–´–ó–û–í: {name} | –†–û–õ–¨: {role} | –°–û–°–¢–û–Ø–ù–ò–ï: {await state.get_state()}")

router = Router()

class AdminSubjectsStates(StatesGroup):
    # –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞
    enter_subject_name = State()
    confirm_add_subject = State()

    # –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞
    select_subject_to_delete = State()
    confirm_delete_subject = State()

# === –î–û–ë–ê–í–õ–ï–ù–ò–ï –ü–†–ï–î–ú–ï–¢–ê ===

@router.callback_query(F.data == "add_subject")
async def start_add_subject(callback: CallbackQuery, state: FSMContext, user_role: str = None):
    """–ù–∞—á–∞—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞"""
    await log("start_add_subject", user_role, state)
    await callback.message.edit_text(
        text="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞:",
        reply_markup=get_home_kb()
    )
    await state.set_state(AdminSubjectsStates.enter_subject_name)
    await log("start_add_subject_AFTER", user_role, state)

@router.message(StateFilter(AdminSubjectsStates.enter_subject_name))
async def process_subject_name(message: Message, state: FSMContext, user_role: str = None):
    """–û–±—Ä–∞–±–æ—Ç–∞—Ç—å –≤–≤–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞"""
    await log("process_subject_name", user_role, state)
    subject_name = message.text.strip()

    await state.update_data(subject_name=subject_name)
    await state.set_state(AdminSubjectsStates.confirm_add_subject)

    await message.answer(
        text=f"üìã –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞:\n\n"
             f"–ù–∞–∑–≤–∞–Ω–∏–µ: {subject_name}",
        reply_markup=get_confirmation_kb("add", "subject")
    )
    await log("process_subject_name_AFTER", user_role, state)

@router.callback_query(StateFilter(AdminSubjectsStates.confirm_add_subject), F.data.startswith("confirm_add_subject_"))
async def confirm_add_subject(callback: CallbackQuery, state: FSMContext, user_role: str = None):
    """–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞"""
    await log("confirm_add_subject", user_role, state)
    data = await state.get_data()
    subject_name = data.get("subject_name", "")

    success = await add_subject(subject_name)

    if success:
        await callback.message.edit_text(
            text=f"‚úÖ –ü—Ä–µ–¥–º–µ—Ç '{subject_name}' —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!",
            reply_markup=get_home_kb()
        )
    else:
        await callback.message.edit_text(
            text=f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ '{subject_name}'!\n"
                 f"–í–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–µ–¥–º–µ—Ç —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.",
            reply_markup=get_home_kb()
        )
    await state.clear()
    await log("confirm_add_subject_AFTER", user_role, state)

# === –£–î–ê–õ–ï–ù–ò–ï –ü–†–ï–î–ú–ï–¢–ê ===

@router.callback_query(F.data == "remove_subject")
async def start_remove_subject(callback: CallbackQuery, state: FSMContext, user_role: str = None):
    """–ù–∞—á–∞—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞"""
    await log("start_remove_subject", user_role, state)

    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø—Ä–µ–¥–º–µ—Ç—ã
        subjects = await get_subjects_list()

        if not subjects:
            await callback.message.edit_text(
                text="üìã –°–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –ø—É—Å—Ç!\n\n"
                     "–°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤—å—Ç–µ –ø—Ä–µ–¥–º–µ—Ç—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–º–∏.",
                reply_markup=get_home_kb()
            )
            return

        subjects_kb = await get_subjects_list_kb("delete_subject")
        await callback.message.edit_text(
            text="–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:",
            reply_markup=subjects_kb
        )
        await state.set_state(AdminSubjectsStates.select_subject_to_delete)

    except Exception as e:
        await callback.message.edit_text(
            text=f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–ø–∏—Å–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤!\n\n"
                 f"–ü—Ä–∏—á–∏–Ω–∞: {str(e)}",
            reply_markup=get_home_kb()
        )

    await log("start_remove_subject_AFTER", user_role, state)

@router.callback_query(StateFilter(AdminSubjectsStates.select_subject_to_delete), F.data.startswith("delete_subject_"))
async def select_subject_to_delete(callback: CallbackQuery, state: FSMContext, user_role: str = None):
    """–í—ã–±—Ä–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è"""
    await log("select_subject_to_delete", user_role, state)

    try:
        subject_id = int(callback.data.replace("delete_subject_", ""))
        subject = await get_subject_by_id(subject_id)

        if not subject:
            await callback.message.edit_text(
                text="‚ùå –ü—Ä–µ–¥–º–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!",
                reply_markup=get_home_kb()
            )
            return

        await state.update_data(subject_to_delete=subject_id, subject_name=subject.name)
        await state.set_state(AdminSubjectsStates.confirm_delete_subject)

        await callback.message.edit_text(
            text=f"üóë –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–∞:\n\n"
                 f"–ù–∞–∑–≤–∞–Ω–∏–µ: {subject.name}\n\n"
                 f"‚ö†Ô∏è –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å!",
            reply_markup=get_confirmation_kb("delete", "subject", str(subject_id))
        )

    except ValueError as e:
        await callback.message.edit_text(
            text=f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ ID –ø—Ä–µ–¥–º–µ—Ç–∞!\n\n"
                 f"–ü—Ä–∏—á–∏–Ω–∞: {str(e)}",
            reply_markup=get_home_kb()
        )
    except Exception as e:
        await callback.message.edit_text(
            text=f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–∞!\n\n"
                 f"–ü—Ä–∏—á–∏–Ω–∞: {str(e)}",
            reply_markup=get_home_kb()
        )

    await log("select_subject_to_delete_AFTER", user_role, state)

@router.callback_query(StateFilter(AdminSubjectsStates.confirm_delete_subject), F.data.startswith("confirm_delete_subject_"))
async def confirm_delete_subject(callback: CallbackQuery, state: FSMContext, user_role: str = None):
    """–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞"""
    await log("confirm_delete_subject", user_role, state)
    data = await state.get_data()
    subject_id = data.get("subject_to_delete")
    subject_name = data.get("subject_name", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç")

    success = await remove_subject(subject_id)

    if success:
        await callback.message.edit_text(
            text=f"‚úÖ –ü—Ä–µ–¥–º–µ—Ç '{subject_name}' —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!",
            reply_markup=get_home_kb()
        )
    else:
        await callback.message.edit_text(
            text=f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–µ–¥–º–µ—Ç–∞ '{subject_name}'!",
            reply_markup=get_home_kb()
        )

    await state.clear()
    await log("confirm_delete_subject_AFTER", user_role, state)

# === –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –û–¢–ú–ï–ù–´ ===

@router.callback_query(StateFilter(AdminSubjectsStates.confirm_add_subject), F.data.startswith("cancel_add_subject"))
async def cancel_add_subject(callback: CallbackQuery, state: FSMContext, user_role: str = None):
    """–û—Ç–º–µ–Ω–∏—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞"""
    await log("cancel_add_subject", user_role, state)
    await callback.message.edit_text(
        text="‚ùå –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ",
        reply_markup=get_home_kb()
    )
    await state.clear()
    await log("cancel_add_subject_AFTER", user_role, state)

@router.callback_query(StateFilter(AdminSubjectsStates.confirm_delete_subject), F.data.startswith("cancel_delete_subject"))
async def cancel_delete_subject(callback: CallbackQuery, state: FSMContext, user_role: str = None):
    """–û—Ç–º–µ–Ω–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞"""
    await log("cancel_delete_subject", user_role, state)
    await callback.message.edit_text(
        text="‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ",
        reply_markup=get_home_kb()
    )
    await state.clear()
    await log("cancel_delete_subject_AFTER", user_role, state)
