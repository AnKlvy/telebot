from aiogram import Router, F
from aiogram.types import CallbackQuery
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from keyboards.curator_contact import get_curator_subjects_kb, get_back_to_curator_kb

router = Router()

class CuratorStates(StatesGroup):
    main = State()
    curator_info = State()

@router.callback_query(F.data == "curator")
async def show_curator_menu(callback: CallbackQuery, state: FSMContext):
    """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç–∞ –¥–ª—è —Å–≤—è–∑–∏ —Å –∫—É—Ä–∞—Ç–æ—Ä–æ–º"""
    await callback.message.edit_text(
        "–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?\n"
        "–í—ã–±–µ—Ä–∏ –ø—Ä–µ–¥–º–µ—Ç ‚Äî —è –ø–æ–∫–∞–∂—É, –∫—Ç–æ —Ç–≤–æ–π –∫—É—Ä–∞—Ç–æ—Ä –∏ –∫–∞–∫ —Å –Ω–∏–º —Å–≤—è–∑–∞—Ç—å—Å—è:",
        reply_markup=get_curator_subjects_kb()
    )
    await state.set_state(CuratorStates.main)

@router.callback_query(CuratorStates.main, F.data.startswith("curator_"))
async def show_curator_info(callback: CallbackQuery, state: FSMContext):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫—É—Ä–∞—Ç–æ—Ä–µ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –ø—Ä–µ–¥–º–µ—Ç—É"""
    subject_id = callback.data.replace("curator_", "")
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞
    subject_names = {
        "chem": "–•–∏–º–∏—è",
        "bio": "–ë–∏–æ–ª–æ–≥–∏—è",
        "kz": "–ò—Å—Ç–æ—Ä–∏—è –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞",
        "mathlit": "–ú–∞—Ç–µ–º–≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å"
    }
    subject_name = subject_names.get(subject_id, "")
    
    # –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫—É—Ä–∞—Ç–æ—Ä–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    # –î–ª—è –ø—Ä–∏–º–µ—Ä–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    curator_info = {
        "chem": {
            "group": "–ö—É—Ä—Å –ò–Ω—Ç–µ–Ω—Å–∏–≤ ‚Äì –≥—Ä—É–ø–ø–∞ 1",
            "telegram": "@chem_curator01"
        },
        "bio": {
            "group": "–ö—É—Ä—Å –ò–Ω—Ç–µ–Ω—Å–∏–≤ ‚Äì –≥—Ä—É–ø–ø–∞ 2",
            "telegram": "@bio_curator02"
        },
        "kz": {
            "group": "–ö—É—Ä—Å –ò–Ω—Ç–µ–Ω—Å–∏–≤ ‚Äì –≥—Ä—É–ø–ø–∞ 3",
            "telegram": "@kz_curator03"
        },
        "mathlit": {
            "group": "–ö—É—Ä—Å –ò–Ω—Ç–µ–Ω—Å–∏–≤ ‚Äì –≥—Ä—É–ø–ø–∞ 4",
            "telegram": "@mathlit_curator04"
        }
    }
    
    curator = curator_info.get(subject_id, {})
    group = curator.get("group", "")
    telegram = curator.get("telegram", "")
    
    await callback.message.edit_text(
        f"–ö—É—Ä–∞—Ç–æ—Ä –ø–æ –ø—Ä–µ–¥–º–µ—Ç—É {subject_name}:\n"
        f"–ì—Ä—É–ø–ø–∞: {group}\n"
        f"üì© Telegram: {telegram}",
        reply_markup=get_back_to_curator_kb()
    )
    await state.set_state(CuratorStates.curator_info)

@router.callback_query(F.data == "back_to_curator")
async def back_to_curator_menu(callback: CallbackQuery, state: FSMContext):
    """–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É –ø—Ä–µ–¥–º–µ—Ç–∞ –∫—É—Ä–∞—Ç–æ—Ä–∞"""
    await show_curator_menu(callback, state)