#!/bin/bash

# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π SSL –º–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è Beget VPS
# –í—Å—ë –≤ –æ–¥–Ω–æ–º: –ø—Ä–æ–≤–µ—Ä–∫–∞, —Å–æ–∑–¥–∞–Ω–∏–µ, –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ SSL

# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π SSL –º–µ–Ω–µ–¥–∂–µ—Ä - –≤—Å—ë –≤—Å—Ç—Ä–æ–µ–Ω–æ, –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã –Ω–µ –Ω—É–∂–Ω—ã

echo "üîß –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π SSL –ú–µ–Ω–µ–¥–∂–µ—Ä"
echo "============================="

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
if [ -f "/etc/edu_telebot/env" ]; then
    source /etc/edu_telebot/env
elif [ -f ".env" ]; then
    source .env
else
    echo "‚ùå –§–∞–π–ª —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    exit 1
fi

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã
check_system() {
    echo "üìä –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:"
    echo "–û–°: $(cat /etc/os-release | grep PRETTY_NAME | cut -d'"' -f2 2>/dev/null || echo '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')"

    # –í–Ω–µ—à–Ω–∏–π IP
    EXTERNAL_IP=$(curl -s ifconfig.me 2>/dev/null || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å")
    echo "–í–Ω–µ—à–Ω–∏–π IP: $EXTERNAL_IP"

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—Ç—ã
    echo ""
    echo "üîå –ü–æ—Ä—Ç—ã:"
    if sudo netstat -tlnp | grep -q ":80 "; then
        echo "–ü–æ—Ä—Ç 80: ‚úÖ –ó–∞–Ω—è—Ç"
    else
        echo "–ü–æ—Ä—Ç 80: ‚ö™ –°–≤–æ–±–æ–¥–µ–Ω"
    fi

    if sudo netstat -tlnp | grep -q ":443 "; then
        echo "–ü–æ—Ä—Ç 443: ‚úÖ –ó–∞–Ω—è—Ç"
    else
        echo "–ü–æ—Ä—Ç 443: ‚ö™ –°–≤–æ–±–æ–¥–µ–Ω"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ–º–µ–Ω–∞
check_domain() {
    echo ""
    echo "üåç –î–æ–º–µ–Ω: ${DOMAIN:-–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω}"

    if [ -n "$DOMAIN" ] && [ "$DOMAIN" != "localhost" ] && [ "$DOMAIN" != "your-domain.com" ]; then
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º DNS
        DOMAIN_IP=$(dig +short $DOMAIN 2>/dev/null | tail -n1)
        if [ -n "$DOMAIN_IP" ]; then
            echo "IP –¥–æ–º–µ–Ω–∞: $DOMAIN_IP"
            EXTERNAL_IP=$(curl -s ifconfig.me 2>/dev/null)
            if [ "$EXTERNAL_IP" = "$DOMAIN_IP" ]; then
                echo "DNS: ‚úÖ –î–æ–º–µ–Ω —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —ç—Ç–æ—Ç —Å–µ—Ä–≤–µ—Ä"
                return 0
            else
                echo "DNS: ‚ö†Ô∏è –î–æ–º–µ–Ω —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –¥—Ä—É–≥–æ–π —Å–µ—Ä–≤–µ—Ä"
                return 1
            fi
        else
            echo "DNS: ‚ùå –î–æ–º–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω"
            return 1
        fi
    else
        echo "‚ùå –î–æ–º–µ–Ω –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è SSL"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
check_ssl_certs() {
    echo ""
    echo "üîê SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã:"
    if [ -f "nginx/ssl/fullchain.pem" ] && [ -f "nginx/ssl/privkey.pem" ]; then
        echo "‚úÖ –ù–∞–π–¥–µ–Ω—ã –≤ nginx/ssl/"

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è
        if command -v openssl &> /dev/null; then
            echo "–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è:"
            openssl x509 -in nginx/ssl/fullchain.pem -noout -dates 2>/dev/null || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å"
        fi
        return 0
    else
        echo "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
create_ssl_certs() {
    echo "üîê –°–æ–∑–¥–∞–Ω–∏–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤..."

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ–º–µ–Ω
    if [ -z "$DOMAIN" ] || [ "$DOMAIN" = "localhost" ] || [ "$DOMAIN" = "your-domain.com" ]; then
        echo "‚ùå –î–ª—è SSL –Ω—É–∂–µ–Ω –Ω–∞—Å—Ç–æ—è—â–∏–π –¥–æ–º–µ–Ω!"
        echo "–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –¥–æ–º–µ–Ω –≤ /etc/edu_telebot/env: DOMAIN=–≤–∞—à-–¥–æ–º–µ–Ω.com"
        return 1
    fi

    # –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨: –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–µ–º –æ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
    if [ -f "nginx/ssl/fullchain.pem" ] && [ -f "nginx/ssl/privkey.pem" ]; then
        echo "‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ù–∞–π–¥–µ–Ω—ã —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã!"
        echo "–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è:"
        openssl x509 -in nginx/ssl/fullchain.pem -noout -dates 2>/dev/null || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å"
        echo ""
        echo "–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –ü–ï–†–ï–ó–ê–ü–ò–®–ï–¢ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ!"
        read -p "–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (yes/no): " -r response
        if [[ "$response" != "yes" ]]; then
            echo "‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ. –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã."
            return 1
        fi
        echo "‚ö†Ô∏è –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤..."
        cp nginx/ssl/fullchain.pem nginx/ssl/fullchain.pem.backup.$(date +%Y%m%d_%H%M%S) 2>/dev/null || true
        cp nginx/ssl/privkey.pem nginx/ssl/privkey.pem.backup.$(date +%Y%m%d_%H%M%S) 2>/dev/null || true
    fi

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    if ! command -v socat &> /dev/null; then
        echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º socat (–Ω—É–∂–µ–Ω –¥–ª—è SSL)..."
        sudo apt update -qq
        sudo apt install -y socat curl dig
    fi

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º DNS –ø–µ—Ä–µ–¥ —Å–æ–∑–¥–∞–Ω–∏–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
    echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º DNS –¥–ª—è –¥–æ–º–µ–Ω–∞ $DOMAIN..."
    DOMAIN_IP=$(dig +short $DOMAIN 2>/dev/null | tail -n1)
    EXTERNAL_IP=$(curl -s ifconfig.me 2>/dev/null)

    if [ -z "$DOMAIN_IP" ]; then
        echo "‚ùå –î–æ–º–µ–Ω $DOMAIN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ DNS!"
        echo "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –¥–æ–º–µ–Ω –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —ç—Ç–æ—Ç —Å–µ—Ä–≤–µ—Ä"
        return 1
    fi

    if [ "$EXTERNAL_IP" != "$DOMAIN_IP" ]; then
        echo "‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –î–æ–º–µ–Ω —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ IP $DOMAIN_IP, –Ω–æ –≤–Ω–µ—à–Ω–∏–π IP —Å–µ—Ä–≤–µ—Ä–∞ $EXTERNAL_IP"
        echo "SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –º–æ–∂–µ—Ç –Ω–µ —Å–æ–∑–¥–∞—Ç—å—Å—è!"
        read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/n): " -r response
        if [[ ! "$response" =~ ^[Yy]$ ]]; then
            echo "‚ùå –û—Ç–º–µ–Ω–µ–Ω–æ"
            return 1
        fi
    else
        echo "‚úÖ DNS –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    fi

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º acme.sh
    if [ ! -d "$HOME/.acme.sh" ]; then
        echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º acme.sh..."
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–µ–∑ email - –æ–Ω –±—É–¥–µ—Ç –∑–∞–ø—Ä–æ—à–µ–Ω –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏
        curl https://get.acme.sh | sh
        source ~/.bashrc
    fi

    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º nginx –¥–ª—è –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è –ø–æ—Ä—Ç–∞ 80
    echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º nginx..."
    sudo docker-compose stop nginx 2>/dev/null || true

    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    mkdir -p nginx/ssl

    # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –Ω–∞ Let's Encrypt (–Ω–∞–¥–µ–∂–Ω–µ–µ —á–µ–º ZeroSSL)
    echo "üîß –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Let's Encrypt..."
    echo "üîç –û—Ç–ª–∞–¥–∫–∞: –ü—Ä–æ–≤–µ—Ä—è–µ–º acme.sh –≤ $HOME/.acme.sh/"
    if [ -f "$HOME/.acme.sh/acme.sh" ]; then
        echo "‚úÖ acme.sh –Ω–∞–π–¥–µ–Ω"
        echo "üîç –í—ã–ø–æ–ª–Ω—è–µ–º: $HOME/.acme.sh/acme.sh --set-default-ca --server letsencrypt"
        $HOME/.acme.sh/acme.sh --set-default-ca --server letsencrypt
        echo "üîç –†–µ–∑—É–ª—å—Ç–∞—Ç –∫–æ–º–∞–Ω–¥—ã set-default-ca: $?"
    else
        echo "‚ùå acme.sh –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ $HOME/.acme.sh/"
        return 1
    fi

    # –ü–æ–ª—É—á–∞–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
    echo "üîê –ü–æ–ª—É—á–∞–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–ª—è $DOMAIN —á–µ—Ä–µ–∑ Let's Encrypt..."
    $HOME/.acme.sh/acme.sh --issue -d $DOMAIN --standalone --httpport 80 --server letsencrypt --accountemail mkaribzanovs@gmail.com --debug

    if [ $? -eq 0 ]; then
        # –ö–æ–ø–∏—Ä—É–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
        $HOME/.acme.sh/acme.sh --install-cert -d $DOMAIN \
            --cert-file $(pwd)/nginx/ssl/cert.pem \
            --key-file $(pwd)/nginx/ssl/privkey.pem \
            --fullchain-file $(pwd)/nginx/ssl/fullchain.pem

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞
        chmod 644 nginx/ssl/fullchain.pem nginx/ssl/cert.pem
        chmod 600 nginx/ssl/privkey.pem

        echo "‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!"
        return 0
    else
        echo "‚ùå Let's Encrypt –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª. –ü—Ä–æ–±—É–µ–º ZeroSSL..."

        # –ü—Ä–æ–±—É–µ–º ZeroSSL –∫–∞–∫ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—É
        $HOME/.acme.sh/acme.sh --set-default-ca --server zerossl
        $HOME/.acme.sh/acme.sh --issue -d $DOMAIN --standalone --httpport 80 --server zerossl

        if [ $? -eq 0 ]; then
            # –ö–æ–ø–∏—Ä—É–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
            $HOME/.acme.sh/acme.sh --install-cert -d $DOMAIN \
                --cert-file $(pwd)/nginx/ssl/cert.pem \
                --key-file $(pwd)/nginx/ssl/privkey.pem \
                --fullchain-file $(pwd)/nginx/ssl/fullchain.pem

            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞
            chmod 644 nginx/ssl/fullchain.pem nginx/ssl/cert.pem
            chmod 600 nginx/ssl/privkey.pem

            echo "‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã —Å–æ–∑–¥–∞–Ω—ã —á–µ—Ä–µ–∑ ZeroSSL!"
            return 0
        else
            echo "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ —á–µ—Ä–µ–∑ –≤—Å–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã"
            echo "üí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:"
            echo "   - –î–æ–º–µ–Ω $DOMAIN –Ω–µ —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —ç—Ç–æ—Ç —Å–µ—Ä–≤–µ—Ä (IP: $EXTERNAL_IP)"
            echo "   - –ü–æ—Ä—Ç 80 –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∏–ª–∏ –∑–∞–Ω—è—Ç"
            echo "   - –ü—Ä–æ–±–ª–µ–º—ã —Å DNS"
            echo "   - –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ Let's Encrypt"
            echo ""
            echo "üîß –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:"
            echo "   1. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å DNS: dig $DOMAIN"
            echo "   2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ—Ä—Ç 80: sudo netstat -tlnp | grep :80"
            echo "   3. –ü–æ–¥–æ–∂–¥–∞—Ç—å —á–∞—Å –∏ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞"
            return 1
        fi
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ HTTPS
enable_ssl() {
    echo "üîí –í–∫–ª—é—á–∞–µ–º HTTPS —Ä–µ–∂–∏–º..."

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ–º–µ–Ω
    if [ -z "$DOMAIN" ] || [ "$DOMAIN" = "localhost" ] || [ "$DOMAIN" = "your-domain.com" ]; then
        echo "‚ùå –î–ª—è SSL –Ω—É–∂–µ–Ω –Ω–∞—Å—Ç–æ—è—â–∏–π –¥–æ–º–µ–Ω!"
        return 1
    fi

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
    if ! check_ssl_certs >/dev/null 2>&1; then
        echo "‚ö†Ô∏è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!"
        echo "–°–æ–∑–¥–∞—Ç—å –∏—Ö —Å–µ–π—á–∞—Å? (y/n)"
        read -r response
        if [[ "$response" =~ ^[Yy]$ ]]; then
            if ! create_ssl_certs; then
                return 1
            fi
        else
            echo "‚ùå –ë–µ–∑ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ HTTPS —Ä–µ–∂–∏–º –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω"
            return 1
        fi
    else
        echo "‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã"
    fi

    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    sudo docker-compose down

    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º SSL –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    if [ -f "nginx/nginx.conf.ssl-backup" ]; then
        cp nginx/nginx.conf.ssl-backup nginx/nginx.conf
    elif ! grep -q "listen 443 ssl" nginx/nginx.conf; then
        echo "‚ùå –í nginx.conf –Ω–µ—Ç SSL –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
        return 1
    fi

    # –û–±–Ω–æ–≤–ª—è–µ–º –¥–æ–º–µ–Ω –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    sed -i "s/server_name \${DOMAIN};/server_name $DOMAIN;/g" nginx/nginx.conf
    sed -i "s/server_name _;/server_name $DOMAIN;/g" nginx/nginx.conf

    # –û–±–Ω–æ–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    sudo sed -i 's/WEBHOOK_MODE=false/WEBHOOK_MODE=true/' /etc/edu_telebot/env
    sudo sed -i 's|WEBHOOK_HOST=http://|WEBHOOK_HOST=https://|' /etc/edu_telebot/env
    sudo sed -i "s|DOMAIN=.*|DOMAIN=$DOMAIN|" /etc/edu_telebot/env

    # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    sudo docker-compose up -d

    echo "‚úÖ HTTPS —Ä–µ–∂–∏–º –≤–∫–ª—é—á–µ–Ω"
    echo "üåê Webhook URL: https://$DOMAIN:8443/webhook"
    echo "üí° –î–ª—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –ø–æ—Ä—Ç–∞ 443 –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ reverse proxy"
}

# –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ HTTP
disable_ssl() {
    echo "üîì –í–∫–ª—é—á–∞–µ–º HTTP —Ä–µ–∂–∏–º..."

    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    sudo docker-compose down

    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é SSL –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    if [ -f "nginx/nginx.conf" ] && grep -q "listen 443 ssl" nginx/nginx.conf && [ ! -f "nginx/nginx.conf.ssl-backup" ]; then
        cp nginx/nginx.conf nginx/nginx.conf.ssl-backup
    fi

    # –ö–æ–ø–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –±–µ–∑ SSL –∏ –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ–º –¥–æ–º–µ–Ω
    cp nginx/nginx-no-ssl.conf nginx/nginx.conf

    # –ü–æ–¥—Å—Ç–∞–≤–ª—è–µ–º –¥–æ–º–µ–Ω –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    if [ -n "$DOMAIN" ]; then
        sed -i "s/\${DOMAIN}/$DOMAIN/g" nginx/nginx.conf
    fi

    # –û–±–Ω–æ–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    sudo sed -i 's/WEBHOOK_MODE=true/WEBHOOK_MODE=false/' /etc/edu_telebot/env
    sudo sed -i 's|WEBHOOK_HOST=https://|WEBHOOK_HOST=http://|' /etc/edu_telebot/env

    # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    sudo docker-compose up -d

    echo "‚úÖ HTTP —Ä–µ–∂–∏–º –≤–∫–ª—é—á–µ–Ω"
    echo "üåê Webhook URL: http://${DOMAIN}:8080/webhook"
    echo "üí° –î–ª—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –ø–æ—Ä—Ç–∞ 80 –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ reverse proxy"
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —Å—Ç–∞—Ç—É—Å–∞
show_status() {
    echo "üìä –ü–æ–ª–Ω—ã–π —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã:"
    echo "========================="

    # –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    echo "–î–æ–º–µ–Ω: ${DOMAIN:-–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω}"
    echo "Webhook —Ä–µ–∂–∏–º: ${WEBHOOK_MODE:-false}"
    echo "Webhook URL: ${WEBHOOK_HOST:-http://$DOMAIN}/webhook"

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–Ω–µ—à–Ω–µ–≥–æ IP –∏ DNS
    EXTERNAL_IP=$(curl -s ifconfig.me 2>/dev/null || echo "–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω")
    echo "–í–Ω–µ—à–Ω–∏–π IP: $EXTERNAL_IP"

    if [ -n "$DOMAIN" ] && [ "$DOMAIN" != "localhost" ] && [ "$DOMAIN" != "your-domain.com" ]; then
        DOMAIN_IP=$(dig +short $DOMAIN 2>/dev/null | tail -n1)
        if [ -n "$DOMAIN_IP" ]; then
            echo "IP –¥–æ–º–µ–Ω–∞: $DOMAIN_IP"
            if [ "$EXTERNAL_IP" = "$DOMAIN_IP" ]; then
                echo "DNS: ‚úÖ –î–æ–º–µ–Ω —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ —ç—Ç–æ—Ç —Å–µ—Ä–≤–µ—Ä"
            else
                echo "DNS: ‚ö†Ô∏è –î–æ–º–µ–Ω —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –¥—Ä—É–≥–æ–π —Å–µ—Ä–≤–µ—Ä"
            fi
        else
            echo "DNS: ‚ùå –î–æ–º–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω"
        fi
    fi

    echo ""

    # SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
    if check_ssl_certs; then
        echo "SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã: ‚úÖ –ù–∞–π–¥–µ–Ω—ã"
        if command -v openssl &> /dev/null; then
            echo "–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è:"
            openssl x509 -in nginx/ssl/fullchain.pem -noout -dates 2>/dev/null || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å"
        fi
    else
        echo "SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã: ‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã"
    fi

    # –ü–æ—Ä—Ç—ã
    echo ""
    echo "üîå –ü–æ—Ä—Ç—ã:"
    if sudo netstat -tlnp | grep -q ":80 "; then
        echo "–ü–æ—Ä—Ç 80: ‚úÖ –ó–∞–Ω—è—Ç"
    else
        echo "–ü–æ—Ä—Ç 80: ‚ö™ –°–≤–æ–±–æ–¥–µ–Ω"
    fi

    if sudo netstat -tlnp | grep -q ":443 "; then
        echo "–ü–æ—Ä—Ç 443: ‚úÖ –ó–∞–Ω—è—Ç"
    else
        echo "–ü–æ—Ä—Ç 443: ‚ö™ –°–≤–æ–±–æ–¥–µ–Ω"
    fi

    echo ""
    echo "üê≥ –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
    sudo docker-compose ps 2>/dev/null || echo "Docker Compose –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
echo "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
echo "1) –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å"
echo "2) –í–∫–ª—é—á–∏—Ç—å HTTPS (SSL)"
echo "3) –í–∫–ª—é—á–∏—Ç—å HTTP (–±–µ–∑ SSL)"
echo "4) –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã"
echo "5) –í—ã—Ö–æ–¥"
echo ""
read -p "–í–∞—à –≤—ã–±–æ—Ä (1-5): " choice

case $choice in
    1)
        show_status
        ;;
    2)
        enable_ssl
        ;;
    3)
        disable_ssl
        ;;
    4)
        create_ssl_certs
        ;;
    5)
        echo "üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!"
        exit 0
        ;;
    *)
        echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"
        exit 1
        ;;
esac

echo ""
echo "‚úÖ –ì–æ—Ç–æ–≤–æ! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å: ./scripts/ssl_manager.sh"
