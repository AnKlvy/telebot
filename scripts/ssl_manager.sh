#!/bin/bash

# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π SSL –º–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞
# –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç Beget —Ö–æ—Å—Ç–∏–Ω–≥ –∏ –æ–±—ã—á–Ω—ã–µ VPS
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã

set -e  # –í—ã—Ö–æ–¥ –ø—Ä–∏ –æ—à–∏–±–∫–µ

echo "üîê –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π SSL –º–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞"
echo "================================================"

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
if [ -f "/etc/edu_telebot/env" ]; then
    source /etc/edu_telebot/env
    echo "‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã"
else
    echo "‚ùå –§–∞–π–ª /etc/edu_telebot/env –Ω–µ –Ω–∞–π–¥–µ–Ω"
    echo "üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞: sudo ./scripts/setup_env.sh"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–æ–º–µ–Ω–∞
if [ -z "$DOMAIN" ] || [ "$DOMAIN" = "your-domain.com" ]; then
    echo "‚ùå –î–æ–º–µ–Ω –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è"
    echo "üìù –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª: sudo nano /etc/edu_telebot/env"
    echo "üìù –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è DOMAIN"
    exit 1
fi

echo "üåê –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º SSL –¥–ª—è –¥–æ–º–µ–Ω–∞: $DOMAIN"

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
mkdir -p nginx/ssl
mkdir -p logs/ssl

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ DNS –∑–∞–ø–∏—Å–µ–π
check_dns() {
    echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º DNS –∑–∞–ø–∏—Å–∏ –¥–ª—è $DOMAIN..."
    
    # –ü–æ–ª—É—á–∞–µ–º IP –∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞
    SERVER_IP=$(curl -s ifconfig.me 2>/dev/null || curl -s ipinfo.io/ip 2>/dev/null || echo "unknown")
    echo "üìç IP —Å–µ—Ä–≤–µ—Ä–∞: $SERVER_IP"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º A –∑–∞–ø–∏—Å—å –¥–æ–º–µ–Ω–∞
    DOMAIN_IP=$(dig +short $DOMAIN 2>/dev/null | tail -1)
    if [ -n "$DOMAIN_IP" ]; then
        echo "üìç IP –¥–æ–º–µ–Ω–∞: $DOMAIN_IP"
        if [ "$SERVER_IP" = "$DOMAIN_IP" ]; then
            echo "‚úÖ DNS –∑–∞–ø–∏—Å–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ"
            return 0
        else
            echo "‚ö†Ô∏è DNS –∑–∞–ø–∏—Å–∏ —É–∫–∞–∑—ã–≤–∞—é—Ç –Ω–∞ –¥—Ä—É–≥–æ–π IP"
            echo "üí° –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ A –∑–∞–ø–∏—Å—å $DOMAIN —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ $SERVER_IP"
            return 1
        fi
    else
        echo "‚ùå –î–æ–º–µ–Ω $DOMAIN –Ω–µ —Ä–∞–∑—Ä–µ—à–∞–µ—Ç—Å—è"
        echo "üí° –ù–∞—Å—Ç—Ä–æ–π—Ç–µ A –∑–∞–ø–∏—Å—å –≤ DNS –ø–∞–Ω–µ–ª–∏ –≤–∞—à–µ–≥–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
find_existing_ssl() {
    echo "üîç –ò—â–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã..."
    
    # –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—É—Ç–∏ –∫ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞–º
    local cert_paths=(
        "/etc/letsencrypt/live/$DOMAIN"
        "/etc/letsencrypt/live"
        "$HOME/.acme.sh/$DOMAIN"
        "$HOME/.acme.sh"
        "/etc/ssl/certs"
        "/opt/ssl"
        "/var/ssl"
        "/home/*/ssl"
        "/home/*/.acme.sh"
    )

    for path in "${cert_paths[@]}"; do
        # –†–∞—Å—à–∏—Ä—è–µ–º wildcards
        for expanded_path in $path; do
            if [ -d "$expanded_path" ]; then
                # –ò—â–µ–º fullchain.pem –∏ privkey.pem
                local fullchain=$(find "$expanded_path" -name "fullchain.pem" -type f 2>/dev/null | head -1)
                local privkey=$(find "$expanded_path" -name "privkey.pem" -type f 2>/dev/null | head -1)

                # –¢–∞–∫–∂–µ –∏—â–µ–º cert.pem –∏ key.pem
                if [ -z "$fullchain" ]; then
                    fullchain=$(find "$expanded_path" -name "cert.pem" -type f 2>/dev/null | head -1)
                fi
                if [ -z "$privkey" ]; then
                    privkey=$(find "$expanded_path" -name "key.pem" -type f 2>/dev/null | head -1)
                fi

                if [ -n "$fullchain" ] && [ -n "$privkey" ]; then
                    echo "‚úÖ –ù–∞–π–¥–µ–Ω—ã SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã:"
                    echo "   –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç: $fullchain"
                    echo "   –ö–ª—é—á: $privkey"

                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
                    if command -v openssl &> /dev/null; then
                        local expiry=$(openssl x509 -enddate -noout -in "$fullchain" 2>/dev/null | cut -d= -f2)
                        if [ -n "$expiry" ]; then
                            echo "   –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è: $expiry"
                        fi
                    fi

                    read -p "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã? (y/n): " -n 1 -r
                    echo
                    if [[ $REPLY =~ ^[Yy]$ ]]; then
                        # –ö–æ–ø–∏—Ä—É–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
                        echo "üìã –ö–æ–ø–∏—Ä—É–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã..."
                        sudo cp "$fullchain" nginx/ssl/fullchain.pem
                        sudo cp "$privkey" nginx/ssl/privkey.pem

                        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞
                        chmod 644 nginx/ssl/fullchain.pem
                        chmod 600 nginx/ssl/privkey.pem
                        chown $USER:$USER nginx/ssl/*.pem 2>/dev/null || true

                        echo "‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
                        return 0
                    fi
                fi
            fi
        done
    done

    return 1
}

# –§—É–Ω–∫—Ü–∏—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–∞ —Ö–æ—Å—Ç–∏–Ω–≥–∞
detect_hosting() {
    echo "üîç –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Ö–æ—Å—Ç–∏–Ω–≥–∞..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Beget
    if [ -d "/home/*/domains" ] || [ -d "/var/www/*/data" ] || grep -q "beget" /etc/hostname 2>/dev/null; then
        echo "üè¢ –û–±–Ω–∞—Ä—É–∂–µ–Ω Beget —Ö–æ—Å—Ç–∏–Ω–≥"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—Ä—É–≥–∏–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ö–æ—Å—Ç–∏–Ω–≥–∏
    if [ -d "/usr/local/mgr5" ]; then
        echo "üè¢ –û–±–Ω–∞—Ä—É–∂–µ–Ω ISPmanager"
        return 2
    fi
    
    if [ -d "/usr/local/cpanel" ]; then
        echo "üè¢ –û–±–Ω–∞—Ä—É–∂–µ–Ω cPanel"
        return 3
    fi
    
    echo "üñ•Ô∏è –û–±—ã—á–Ω—ã–π VPS/—Å–µ—Ä–≤–µ—Ä"
    return 0
}

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
install_dependencies() {
    echo "üì¶ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞–∫–µ—Ç—ã
    sudo apt update -qq
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã
    local packages=("curl" "socat" "cron" "openssl")
    for package in "${packages[@]}"; do
        if ! command -v $package &> /dev/null; then
            echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º $package..."
            sudo apt install -y $package
        else
            echo "‚úÖ $package —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        fi
    done
}

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ acme.sh
install_acme() {
    echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º acme.sh..."
    
    if [ -d "$HOME/.acme.sh" ]; then
        echo "‚úÖ acme.sh —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        return 0
    fi
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º acme.sh
    curl https://get.acme.sh | sh -s email=admin@$DOMAIN
    
    if [ -d "$HOME/.acme.sh" ]; then
        echo "‚úÖ acme.sh —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ"
        # –î–æ–±–∞–≤–ª—è–µ–º –≤ PATH
        export PATH="$HOME/.acme.sh:$PATH"
        return 0
    else
        echo "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ acme.sh"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è SSL —á–µ—Ä–µ–∑ HTTP –≤–∞–ª–∏–¥–∞—Ü–∏—é
get_ssl_http() {
    echo "üîê –ü–æ–ª—É—á–∞–µ–º SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —á–µ—Ä–µ–∑ HTTP –≤–∞–ª–∏–¥–∞—Ü–∏—é..."
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    local webroot="/tmp/acme_webroot"
    mkdir -p "$webroot"
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    echo "üåê –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –Ω–∞ –ø–æ—Ä—Ç—É 80..."
    
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º nginx –µ—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω
    if command -v docker-compose &> /dev/null && [ -f "docker-compose.yml" ]; then
        echo "üõë –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º nginx..."
        docker-compose stop nginx 2>/dev/null || true
    fi
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
    if $HOME/.acme.sh/acme.sh --issue -d $DOMAIN --standalone --httpport 80; then
        echo "‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ø–æ–ª—É—á–µ–Ω —É—Å–ø–µ—à–Ω–æ"
        
        # –ö–æ–ø–∏—Ä—É–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
        $HOME/.acme.sh/acme.sh --install-cert -d $DOMAIN \
            --cert-file nginx/ssl/cert.pem \
            --key-file nginx/ssl/privkey.pem \
            --fullchain-file nginx/ssl/fullchain.pem
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞
        chmod 644 nginx/ssl/*.pem
        chmod 600 nginx/ssl/privkey.pem
        chown $USER:$USER nginx/ssl/*.pem 2>/dev/null || true
        
        echo "‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
        return 0
    else
        echo "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è SSL —á–µ—Ä–µ–∑ DNS –≤–∞–ª–∏–¥–∞—Ü–∏—é (–¥–ª—è Beget)
get_ssl_dns() {
    echo "üîê –ü–æ–ª—É—á–∞–µ–º SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —á–µ—Ä–µ–∑ DNS –≤–∞–ª–∏–¥–∞—Ü–∏—é..."
    echo "‚ö†Ô∏è –î–ª—è DNS –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è —Ä—É—á–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ TXT –∑–∞–ø–∏—Å–∏"

    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
    if $HOME/.acme.sh/acme.sh --issue -d $DOMAIN --dns --yes-I-know-dns-manual-mode-enough-go-ahead-please; then
        echo "‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ø–æ–ª—É—á–µ–Ω —á–µ—Ä–µ–∑ DNS"

        # –ö–æ–ø–∏—Ä—É–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
        $HOME/.acme.sh/acme.sh --install-cert -d $DOMAIN \
            --cert-file nginx/ssl/cert.pem \
            --key-file nginx/ssl/privkey.pem \
            --fullchain-file nginx/ssl/fullchain.pem

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞
        chmod 644 nginx/ssl/*.pem
        chmod 600 nginx/ssl/privkey.pem
        chown $USER:$USER nginx/ssl/*.pem 2>/dev/null || true

        echo "‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
        return 0
    else
        echo "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è SSL —á–µ—Ä–µ–∑ DNS"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è Beget —Ö–æ—Å—Ç–∏–Ω–≥–∞
setup_beget_ssl() {
    echo "üè¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSL –¥–ª—è Beget —Ö–æ—Å—Ç–∏–Ω–≥–∞..."
    echo "üí° –ù–∞ Beget —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã"
    echo "üí° –ò–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã —á–µ—Ä–µ–∑ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ Beget
    local beget_ssl_paths=(
        "/home/*/ssl"
        "/var/www/*/ssl"
        "/home/*/domains/*/ssl"
    )

    for path in "${beget_ssl_paths[@]}"; do
        for expanded_path in $path; do
            if [ -d "$expanded_path" ]; then
                echo "üîç –ù–∞–π–¥–µ–Ω–∞ SSL –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $expanded_path"
                if find_ssl_in_path "$expanded_path"; then
                    return 0
                fi
            fi
        done
    done

    echo "‚ö†Ô∏è –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã Beget –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    echo "üí° –í–∞—Ä–∏–∞–Ω—Ç—ã –¥–ª—è Beget:"
    echo "   1. –í–∫–ª—é—á–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π SSL –≤ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è"
    echo "   2. –ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç"
    echo "   3. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å DNS –≤–∞–ª–∏–¥–∞—Ü–∏—é"

    read -p "–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å DNS –≤–∞–ª–∏–¥–∞—Ü–∏—é? (y/n): " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        get_ssl_dns
        return $?

    fi

    return 1
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ SSL –≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –ø—É—Ç–∏
find_ssl_in_path() {
    local search_path="$1"
    local fullchain=$(find "$search_path" -name "*.crt" -o -name "*.pem" -o -name "*cert*" 2>/dev/null | head -1)
    local privkey=$(find "$search_path" -name "*.key" -o -name "*private*" 2>/dev/null | head -1)

    if [ -n "$fullchain" ] && [ -n "$privkey" ]; then
        echo "‚úÖ –ù–∞–π–¥–µ–Ω—ã SSL —Ñ–∞–π–ª—ã:"
        echo "   –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç: $fullchain"
        echo "   –ö–ª—é—á: $privkey"

        read -p "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–∏ —Ñ–∞–π–ª—ã? (y/n): " -n 1 -r
        echo
        if [[ $REPLY =~ ^[Yy]$ ]]; then
            sudo cp "$fullchain" nginx/ssl/fullchain.pem
            sudo cp "$privkey" nginx/ssl/privkey.pem
            chmod 644 nginx/ssl/fullchain.pem
            chmod 600 nginx/ssl/privkey.pem
            chown $USER:$USER nginx/ssl/*.pem 2>/dev/null || true
            return 0
        fi
    fi

    return 1
}

# –§—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
setup_auto_renewal() {
    echo "üîÑ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤..."

    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤
    mkdir -p logs/ssl

    # –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    cat > /tmp/ssl_renewal.sh << 'EOF'
#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤

PROJECT_DIR="/path/to/project"
cd "$PROJECT_DIR"

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
if [ -f "/etc/edu_telebot/env" ]; then
    source /etc/edu_telebot/env
else
    echo "$(date): –û—à–∏–±–∫–∞ - —Ñ–∞–π–ª –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω" >> logs/ssl/renewal.log
    exit 1
fi

# –õ–æ–≥–∏—Ä—É–µ–º –Ω–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
echo "$(date): –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –¥–ª—è $DOMAIN" >> logs/ssl/renewal.log

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
if [ -f "nginx/ssl/fullchain.pem" ]; then
    EXPIRY_DATE=$(openssl x509 -enddate -noout -in nginx/ssl/fullchain.pem 2>/dev/null | cut -d= -f2)
    EXPIRY_TIMESTAMP=$(date -d "$EXPIRY_DATE" +%s 2>/dev/null || echo "0")
    CURRENT_TIMESTAMP=$(date +%s)
    DAYS_LEFT=$(( (EXPIRY_TIMESTAMP - CURRENT_TIMESTAMP) / 86400 ))

    echo "$(date): –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –µ—â–µ $DAYS_LEFT –¥–Ω–µ–π" >> logs/ssl/renewal.log

    # –û–±–Ω–æ–≤–ª—è–µ–º –µ—Å–ª–∏ –æ—Å—Ç–∞–ª–æ—Å—å –º–µ–Ω—å—à–µ 30 –¥–Ω–µ–π
    if [ $DAYS_LEFT -lt 30 ]; then
        echo "$(date): –û–±–Ω–æ–≤–ª—è–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç (–æ—Å—Ç–∞–ª–æ—Å—å $DAYS_LEFT –¥–Ω–µ–π)" >> logs/ssl/renewal.log

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã —á–µ—Ä–µ–∑ acme.sh
        if [ -d "$HOME/.acme.sh" ]; then
            if $HOME/.acme.sh/acme.sh --renew -d $DOMAIN; then
                echo "$(date): SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω" >> logs/ssl/renewal.log

                # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º nginx
                if command -v docker-compose &> /dev/null && [ -f "docker-compose.yml" ]; then
                    docker-compose restart nginx
                    echo "$(date): Nginx –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω" >> logs/ssl/renewal.log
                fi
            else
                echo "$(date): –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞" >> logs/ssl/renewal.log
            fi
        else
            echo "$(date): acme.sh –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ" >> logs/ssl/renewal.log
        fi
    else
        echo "$(date): –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è" >> logs/ssl/renewal.log
    fi
else
    echo "$(date): SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω" >> logs/ssl/renewal.log
fi
EOF

    # –ó–∞–º–µ–Ω—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
    sed -i "s|/path/to/project|$(pwd)|g" /tmp/ssl_renewal.sh

    # –ö–æ–ø–∏—Ä—É–µ–º —Å–∫—Ä–∏–ø—Ç
    sudo cp /tmp/ssl_renewal.sh /etc/cron.daily/ssl-renewal
    sudo chmod +x /etc/cron.daily/ssl-renewal
    sudo chown root:root /etc/cron.daily/ssl-renewal

    echo "‚úÖ –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ (–µ–∂–µ–¥–Ω–µ–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞)"
    echo "üìù –õ–æ–≥–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: logs/ssl/renewal.log"
    rm /tmp/ssl_renewal.sh
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
check_ssl_status() {
    echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤..."

    if [ -f "nginx/ssl/fullchain.pem" ] && [ -f "nginx/ssl/privkey.pem" ]; then
        echo "‚úÖ SSL —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã"

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è
        if command -v openssl &> /dev/null; then
            local expiry=$(openssl x509 -enddate -noout -in nginx/ssl/fullchain.pem 2>/dev/null | cut -d= -f2)
            if [ -n "$expiry" ]; then
                local expiry_timestamp=$(date -d "$expiry" +%s 2>/dev/null || echo "0")
                local current_timestamp=$(date +%s)
                local days_left=$(( (expiry_timestamp - current_timestamp) / 86400 ))

                echo "üìÖ –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è: $expiry"
                echo "‚è∞ –û—Å—Ç–∞–ª–æ—Å—å –¥–Ω–µ–π: $days_left"

                if [ $days_left -lt 30 ]; then
                    echo "‚ö†Ô∏è –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å–∫–æ—Ä–æ –∏—Å—Ç–µ—á–µ—Ç, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ"
                    return 1
                else
                    echo "‚úÖ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω"
                    return 0
                fi
            fi
        fi

        echo "‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
        return 0
    else
        echo "‚ùå SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞ –º–µ—Ç–æ–¥–∞
choose_ssl_method() {
    echo ""
    echo "üîê –í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –ø–æ–ª—É—á–µ–Ω–∏—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞:"
    echo "1) HTTP –≤–∞–ª–∏–¥–∞—Ü–∏—è (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–ª—è VPS)"
    echo "2) DNS –≤–∞–ª–∏–¥–∞—Ü–∏—è (–¥–ª—è —Ö–æ—Å—Ç–∏–Ω–≥–æ–≤ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏)"
    echo "3) –ü–æ–∏—Å–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤"
    echo "4) –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å SSL (—Ç–æ–ª—å–∫–æ HTTP —Ä–µ–∂–∏–º)"

    read -p "–í–∞—à –≤—ã–±–æ—Ä (1-4): " -n 1 -r
    echo

    case $REPLY in
        1)
            return 1  # HTTP
            ;;
        2)
            return 2  # DNS
            ;;
        3)
            return 3  # Search
            ;;
        4)
            return 4  # Skip
            ;;
        *)
            echo "‚ö° –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é: HTTP –≤–∞–ª–∏–¥–∞—Ü–∏—è"
            return 1
            ;;
    esac
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É SSL..."

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å SSL
    if check_ssl_status; then
        echo "üéâ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã"
        read -p "–û–±–Ω–æ–≤–∏—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ? (y/n): " -n 1 -r
        echo
        if [[ ! $REPLY =~ ^[Yy]$ ]]; then
            echo "‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã"
            setup_auto_renewal
            return 0
        fi
    fi

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º DNS (–Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ)
    if ! check_dns; then
        echo "‚ö†Ô∏è DNS –∑–∞–ø–∏—Å–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ"
        echo "üí° –≠—Ç–æ –º–æ–∂–µ—Ç –ø–æ–≤–ª–∏—è—Ç—å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤"
    fi

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Ö–æ—Å—Ç–∏–Ω–≥–∞
    detect_hosting
    hosting_type=$?

    # –î–ª—è Beget –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É
    if [ $hosting_type -eq 1 ]; then
        echo "üè¢ –û–±–Ω–∞—Ä—É–∂–µ–Ω Beget —Ö–æ—Å—Ç–∏–Ω–≥"
        if setup_beget_ssl; then
            echo "üéâ SSL –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è Beget"
            setup_auto_renewal
            return 0
        fi
    fi

    # –ò—â–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
    if find_existing_ssl; then
        echo "üéâ –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã"
        setup_auto_renewal
        return 0
    fi

    # –í—ã–±–∏—Ä–∞–µ–º –º–µ—Ç–æ–¥ –ø–æ–ª—É—á–µ–Ω–∏—è SSL
    choose_ssl_method
    method=$?

    case $method in
        1)  # HTTP –≤–∞–ª–∏–¥–∞—Ü–∏—è
            echo "üåê –ò—Å–ø–æ–ª—å–∑—É–µ–º HTTP –≤–∞–ª–∏–¥–∞—Ü–∏—é..."
            install_dependencies
            install_acme
            if get_ssl_http; then
                echo "üéâ SSL –Ω–∞—Å—Ç—Ä–æ–µ–Ω —á–µ—Ä–µ–∑ HTTP –≤–∞–ª–∏–¥–∞—Ü–∏—é"
                setup_auto_renewal
                return 0
            fi
            ;;
        2)  # DNS –≤–∞–ª–∏–¥–∞—Ü–∏—è
            echo "üîç –ò—Å–ø–æ–ª—å–∑—É–µ–º DNS –≤–∞–ª–∏–¥–∞—Ü–∏—é..."
            install_dependencies
            install_acme
            if get_ssl_dns; then
                echo "üéâ SSL –Ω–∞—Å—Ç—Ä–æ–µ–Ω —á–µ—Ä–µ–∑ DNS –≤–∞–ª–∏–¥–∞—Ü–∏—é"
                setup_auto_renewal
                return 0
            fi
            ;;
        3)  # –ü–æ–∏—Å–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö
            echo "üîç –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –ø–æ–∏—Å–∫ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤..."
            if find_existing_ssl; then
                setup_auto_renewal
                return 0
            else
                echo "‚ùå –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
            fi
            ;;
        4)  # –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å
            echo "‚ö†Ô∏è SSL –ø—Ä–æ–ø—É—â–µ–Ω, –±–æ—Ç –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ –ø–æ HTTP"
            return 0
            ;;
    esac

    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å SSL"
    echo "üí° –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:"
    echo "   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ DNS –∑–∞–ø–∏—Å–∏ –¥–æ–º–µ–Ω–∞"
    echo "   - –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –ø–æ—Ä—Ç 80 –æ—Ç–∫—Ä—ã—Ç"
    echo "   - –ü–æ–ø—Ä–æ–±—É–π—Ç–µ DNS –≤–∞–ª–∏–¥–∞—Ü–∏—é"
    echo "   - –ù–∞—Å—Ç—Ä–æ–π—Ç–µ SSL –≤—Ä—É—á–Ω—É—é"
    return 1
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —Å–ø—Ä–∞–≤–∫–∏
show_help() {
    echo "üîê SSL –º–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞"
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:"
    echo "  ./scripts/ssl_manager.sh [–æ–ø—Ü–∏—è]"
    echo ""
    echo "–û–ø—Ü–∏–∏:"
    echo "  --check     –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤"
    echo "  --renew     –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã"
    echo "  --help      –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
    echo "–ë–µ–∑ –æ–ø—Ü–∏–π: –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ SSL"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
case "${1:-}" in
    --check)
        check_ssl_status
        exit $?
        ;;
    --renew)
        echo "üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤..."
        if [ -d "$HOME/.acme.sh" ]; then
            $HOME/.acme.sh/acme.sh --renew -d $DOMAIN --force
        else
            echo "‚ùå acme.sh –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
            exit 1
        fi
        ;;
    --help)
        show_help
        exit 0
        ;;
    "")
        # –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
        main "$@"
        ;;
    *)
        echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø—Ü–∏—è: $1"
        show_help
        exit 1
        ;;
esac

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è Beget —Ö–æ—Å—Ç–∏–Ω–≥–∞
setup_beget_ssl() {
    echo "üè¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSL –¥–ª—è Beget —Ö–æ—Å—Ç–∏–Ω–≥–∞..."

    echo "üí° –ù–∞ Beget —Ö–æ—Å—Ç–∏–Ω–≥–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –æ–±—ã—á–Ω–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
    echo "üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ö–æ—Å—Ç–∏–Ω–≥–æ–º –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SSL"

    # –ò—â–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –≤ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö Beget
    local beget_paths=(
        "/home/*/ssl"
        "/var/www/*/ssl"
        "/home/*/domains/*/ssl"
    )

    for path in "${beget_paths[@]}"; do
        for expanded_path in $path; do
            if [ -d "$expanded_path" ]; then
                echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º: $expanded_path"
                local cert=$(find "$expanded_path" -name "*.crt" -o -name "*.pem" | head -1)
                local key=$(find "$expanded_path" -name "*.key" | head -1)

                if [ -n "$cert" ] && [ -n "$key" ]; then
                    echo "‚úÖ –ù–∞–π–¥–µ–Ω—ã —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã Beget:"
                    echo "   –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç: $cert"
                    echo "   –ö–ª—é—á: $key"

                    read -p "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã? (y/n): " -n 1 -r
                    echo
                    if [[ $REPLY =~ ^[Yy]$ ]]; then
                        cp "$cert" nginx/ssl/fullchain.pem
                        cp "$key" nginx/ssl/privkey.pem
                        chmod 644 nginx/ssl/fullchain.pem
                        chmod 600 nginx/ssl/privkey.pem
                        echo "‚úÖ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã Beget –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
                        return 0
                    fi
                fi
            fi
        done
    done

    echo "‚ö†Ô∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã Beget –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    echo "üí° –ù–∞—Å—Ç—Ä–æ–π—Ç–µ SSL –≤ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Beget –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Let's Encrypt"
    return 1
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è SSL —á–µ—Ä–µ–∑ DNS –≤–∞–ª–∏–¥–∞—Ü–∏—é
get_ssl_dns() {
    echo "üîê –ü–æ–ª—É—á–∞–µ–º SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —á–µ—Ä–µ–∑ DNS –≤–∞–ª–∏–¥–∞—Ü–∏—é..."
    echo "üí° –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –ø–æ–¥—Ö–æ–¥–∏—Ç –µ—Å–ª–∏ –ø–æ—Ä—Ç 80 –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"

    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
    if $HOME/.acme.sh/acme.sh --issue -d $DOMAIN --dns --yes-I-know-dns-manual-mode-enough-go-ahead-please; then
        echo "üìù –î–æ–±–∞–≤—å—Ç–µ TXT –∑–∞–ø–∏—Å—å –≤ DNS:"
        echo "–ò–º—è: _acme-challenge.$DOMAIN"
        echo "–ó–Ω–∞—á–µ–Ω–∏–µ: (–±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω–æ –≤—ã—à–µ)"
        echo ""
        read -p "–ü–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏ –Ω–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."

        # –ó–∞–≤–µ—Ä—à–∞–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é
        if $HOME/.acme.sh/acme.sh --renew -d $DOMAIN --yes-I-know-dns-manual-mode-enough-go-ahead-please; then
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
            $HOME/.acme.sh/acme.sh --install-cert -d $DOMAIN \
                --cert-file nginx/ssl/cert.pem \
                --key-file nginx/ssl/privkey.pem \
                --fullchain-file nginx/ssl/fullchain.pem

            chmod 644 nginx/ssl/*.pem
            chmod 600 nginx/ssl/privkey.pem
            chown $USER:$USER nginx/ssl/*.pem 2>/dev/null || true

            echo "‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –ø–æ–ª—É—á–µ–Ω—ã —á–µ—Ä–µ–∑ DNS"
            return 0
        fi
    fi

    echo "‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è SSL —á–µ—Ä–µ–∑ DNS"
    return 1
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
check_ssl_status() {
    echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤..."

    if [ ! -f "nginx/ssl/fullchain.pem" ] || [ ! -f "nginx/ssl/privkey.pem" ]; then
        echo "‚ùå SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        return 1
    fi

    echo "‚úÖ SSL —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã"

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è
    if command -v openssl &> /dev/null; then
        local expiry=$(openssl x509 -enddate -noout -in nginx/ssl/fullchain.pem 2>/dev/null | cut -d= -f2)
        if [ -n "$expiry" ]; then
            echo "üìÖ –°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è: $expiry"

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∏—Å—Ç–µ–∫–∞–µ—Ç –ª–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –≤ –±–ª–∏–∂–∞–π—à–∏–µ 30 –¥–Ω–µ–π
            local expiry_timestamp=$(date -d "$expiry" +%s 2>/dev/null || echo "0")
            local current_timestamp=$(date +%s)
            local days_left=$(( (expiry_timestamp - current_timestamp) / 86400 ))

            if [ $days_left -lt 30 ]; then
                echo "‚ö†Ô∏è –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –∏—Å—Ç–µ–∫–∞–µ—Ç —á–µ—Ä–µ–∑ $days_left –¥–Ω–µ–π"
                echo "üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ–±–Ω–æ–≤–∏—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç"
            else
                echo "‚úÖ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –µ—â–µ $days_left –¥–Ω–µ–π"
            fi
        fi
    fi

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
    local cert_perms=$(stat -c %a nginx/ssl/fullchain.pem 2>/dev/null)
    local key_perms=$(stat -c %a nginx/ssl/privkey.pem 2>/dev/null)

    if [ "$cert_perms" != "644" ] || [ "$key_perms" != "600" ]; then
        echo "‚ö†Ô∏è –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞–º"
        echo "üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∞..."
        chmod 644 nginx/ssl/fullchain.pem
        chmod 600 nginx/ssl/privkey.pem
        echo "‚úÖ –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã"
    else
        echo "‚úÖ –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã"
    fi

    return 0
}

# –§—É–Ω–∫—Ü–∏—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –º–µ–Ω—é
interactive_menu() {
    while true; do
        echo ""
        echo "üîê SSL –ú–µ–Ω–µ–¥–∂–µ—Ä - –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é"
        echo "=================================="
        echo "1) –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ SSL"
        echo "2) –ü–æ–∏—Å–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤"
        echo "3) –ü–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç (HTTP)"
        echo "4) –ü–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç (DNS)"
        echo "5) –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å SSL"
        echo "6) –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ"
        echo "7) –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è Beget —Ö–æ—Å—Ç–∏–Ω–≥–∞"
        echo "0) –í—ã—Ö–æ–¥"
        echo ""
        read -p "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ (0-7): " -n 1 -r
        echo

        case $REPLY in
            1)
                main
                ;;
            2)
                find_existing_ssl
                ;;
            3)
                install_dependencies
                install_acme
                get_ssl_http
                ;;
            4)
                install_dependencies
                install_acme
                get_ssl_dns
                ;;
            5)
                check_ssl_status
                ;;
            6)
                setup_auto_renewal
                ;;
            7)
                setup_beget_ssl
                ;;
            0)
                echo "üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!"
                exit 0
                ;;
            *)
                echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"
                ;;
        esac

        echo ""
        read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
    done
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
if [ "$1" = "--interactive" ] || [ "$1" = "-i" ]; then
    interactive_menu
elif [ "$1" = "--check" ] || [ "$1" = "-c" ]; then
    check_ssl_status
elif [ "$1" = "--help" ] || [ "$1" = "-h" ]; then
    echo "üîê SSL –ú–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞"
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:"
    echo "  $0                 - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ SSL"
    echo "  $0 --interactive   - –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é"
    echo "  $0 --check         - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å SSL"
    echo "  $0 --help          - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
    exit 0
else
    # –ó–∞–ø—É—Å–∫–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
    main "$@"
fi
