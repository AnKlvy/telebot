from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters.callback_data import CallbackData
from common.keyboards import get_main_menu_back_button
from typing import List, Literal
from database import SubjectRepository

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π —Å –º–∏–∫—Ä–æ—Ç–µ–º–∞–º–∏
class TopicActions:
    VIEW = "view"
    ADD = "add"
    DELETE = "del"
    CONFIRM_DELETE = "cdel"
    CANCEL = "cancel"

class TopicCallback(CallbackData, prefix="topic"):
    """–§–∞–±—Ä–∏–∫–∞ callback-–¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º–∏–∫—Ä–æ—Ç–µ–º–∞–º–∏"""
    action: Literal[TopicActions.VIEW, TopicActions.ADD, TopicActions.DELETE, 
                   TopicActions.CONFIRM_DELETE, TopicActions.CANCEL]  # –¢–∏–ø –¥–µ–π—Å—Ç–≤–∏—è —Å –º–∏–∫—Ä–æ—Ç–µ–º–æ–π
    subject: str  # –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞
    topic: str | None = None  # –ù–∞–∑–≤–∞–Ω–∏–µ –º–∏–∫—Ä–æ—Ç–µ–º—ã (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)

async def get_subjects_kb() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –ø—Ä–µ–¥–º–µ—Ç–∞ –¥–ª—è –º–∏–∫—Ä–æ—Ç–µ–º—ã"""
    subjects = await SubjectRepository.get_all()
    keyboard = []

    for subject in subjects:
        keyboard.append([
            InlineKeyboardButton(
                text=subject.name,
                callback_data=TopicCallback(action=TopicActions.VIEW, subject=str(subject.id)).pack()
            )
        ])

    keyboard.extend(get_main_menu_back_button())
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

async def get_topics_list_kb(subject_name: str, microtopics: List) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –º–∏–∫—Ä–æ—Ç–µ–º –ø–æ –ø—Ä–µ–¥–º–µ—Ç—É"""
    keyboard = []

    # –ü–æ–ª—É—á–∞–µ–º subject_id –∏–∑ –ø–µ—Ä–≤–æ–π –º–∏–∫—Ä–æ—Ç–µ–º—ã (–µ—Å–ª–∏ –µ—Å—Ç—å) –∏–ª–∏ –∏—â–µ–º –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
    subject_id = None
    if microtopics:
        subject_id = microtopics[0].subject_id
    else:
        # –ï—Å–ª–∏ –º–∏–∫—Ä–æ—Ç–µ–º –Ω–µ—Ç, –∏—â–µ–º –ø—Ä–µ–¥–º–µ—Ç –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
        subjects = await SubjectRepository.get_all()
        for subject in subjects:
            if subject.name == subject_name:
                subject_id = subject.id
                break

    # –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π –º–∏–∫—Ä–æ—Ç–µ–º—ã
    if subject_id:
        keyboard.append([
            InlineKeyboardButton(
                text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –º–∏–∫—Ä–æ—Ç–µ–º—É",
                callback_data=TopicCallback(action=TopicActions.ADD, subject=str(subject_id)).pack()
            )
        ])

    # –°–ø–∏—Å–æ–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –º–∏–∫—Ä–æ—Ç–µ–º
    for microtopic in microtopics:
        keyboard.append([
            InlineKeyboardButton(
                text=f"üìù {microtopic.name}",
                callback_data=TopicCallback(action=TopicActions.VIEW, subject=str(microtopic.subject_id), topic=str(microtopic.id)).pack()
            ),
            InlineKeyboardButton(
                text="‚ùå",
                callback_data=TopicCallback(action=TopicActions.DELETE, subject=str(microtopic.subject_id), topic=str(microtopic.id)).pack()
            )
        ])

    keyboard.extend(get_main_menu_back_button())
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def confirm_delete_topic_kb(subject: str, topic: str) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –º–∏–∫—Ä–æ—Ç–µ–º—ã"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(
                text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", 
                callback_data=TopicCallback(action=TopicActions.CONFIRM_DELETE, subject=subject, topic=topic).pack()
            ),
            InlineKeyboardButton(
                text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", 
                callback_data=TopicCallback(action=TopicActions.CANCEL, subject=subject).pack()
            )
        ],
        *get_main_menu_back_button()
    ]) 