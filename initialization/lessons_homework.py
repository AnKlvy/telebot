"""
–°–æ–∑–¥–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤ –∏ –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π
"""
from database import (
    LessonRepository, HomeworkRepository, QuestionRepository, AnswerOptionRepository
)


async def create_lessons_and_homework(created_subjects):
    """–°–æ–∑–¥–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤ –∏ –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π"""
    try:
        print("üìù –°–æ–∑–¥–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤ –∏ –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π...")
        
        # –î–∞–Ω–Ω—ã–µ –¥–ª—è —É—Ä–æ–∫–æ–≤ –∏ –î–ó –ø–æ –ø—Ä–µ–¥–º–µ—Ç–∞–º
        lessons_data = {
            "Python": [
                {
                    "name": "–û—Å–Ω–æ–≤—ã Python",
                    "homework": "–û—Å–Ω–æ–≤—ã Python",
                    "questions": [
                        {
                            "text": "–ö–∞–∫–æ–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª –≤ Python?",
                            "microtopic": 1,  # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
                            "answers": [
                                {"text": "int", "is_correct": True},
                                {"text": "float", "is_correct": False},
                                {"text": "str", "is_correct": False},
                                {"text": "bool", "is_correct": False}
                            ]
                        }
                    ]
                },
                {
                    "name": "–¶–∏–∫–ª—ã –∏ —É—Å–ª–æ–≤–∏—è",
                    "homework": "–¶–∏–∫–ª—ã –∏ —É—Å–ª–æ–≤–∏—è", 
                    "questions": [
                        {
                            "text": "–ö–∞–∫–æ–π –æ–ø–µ—Ä–∞—Ç–æ—Ä –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—Å–ª–æ–≤–∏—è –≤ Python?",
                            "microtopic": 3,  # –£—Å–ª–æ–≤–∏—è
                            "answers": [
                                {"text": "if", "is_correct": True},
                                {"text": "while", "is_correct": False},
                                {"text": "for", "is_correct": False},
                                {"text": "def", "is_correct": False}
                            ]
                        }
                    ]
                },
                {
                    "name": "–§—É–Ω–∫—Ü–∏–∏",
                    "homework": "–§—É–Ω–∫—Ü–∏–∏",
                    "questions": [
                        {
                            "text": "–ö–∞–∫–æ–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ –≤ Python?",
                            "microtopic": 5,  # –§—É–Ω–∫—Ü–∏–∏
                            "answers": [
                                {"text": "def", "is_correct": True},
                                {"text": "function", "is_correct": False},
                                {"text": "func", "is_correct": False},
                                {"text": "define", "is_correct": False}
                            ]
                        }
                    ]
                },
                {
                    "name": "–û–û–ü –≤ Python",
                    "homework": "–û–û–ü –≤ Python",
                    "questions": [
                        {
                            "text": "–ö–∞–∫–æ–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞—Å—Å–∞ –≤ Python?",
                            "microtopic": 6,  # –ö–ª–∞—Å—Å—ã
                            "answers": [
                                {"text": "class", "is_correct": True},
                                {"text": "object", "is_correct": False},
                                {"text": "struct", "is_correct": False},
                                {"text": "type", "is_correct": False}
                            ]
                        }
                    ]
                }
            ],
            "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞": [
                {
                    "name": "–ê–ª–≥–µ–±—Ä–∞",
                    "homework": "–ê–ª–≥–µ–±—Ä–∞–∏—á–µ—Å–∫–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è",
                    "questions": [
                        {
                            "text": "–ß–µ–º—É —Ä–∞–≤–Ω–æ x¬≤ - 4x + 4?",
                            "microtopic": 1,  # –ê–ª–≥–µ–±—Ä–∞
                            "answers": [
                                {"text": "(x-2)¬≤", "is_correct": True},
                                {"text": "(x+2)¬≤", "is_correct": False},
                                {"text": "(x-4)¬≤", "is_correct": False},
                                {"text": "x¬≤-4", "is_correct": False}
                            ]
                        }
                    ]
                },
                {
                    "name": "–ì–µ–æ–º–µ—Ç—Ä–∏—è",
                    "homework": "–ü–ª–æ—â–∞–¥–∏ —Ñ–∏–≥—É—Ä",
                    "questions": [
                        {
                            "text": "–§–æ—Ä–º—É–ª–∞ –ø–ª–æ—â–∞–¥–∏ –∫—Ä—É–≥–∞:",
                            "microtopic": 2,  # –ì–µ–æ–º–µ—Ç—Ä–∏—è
                            "answers": [
                                {"text": "œÄr¬≤", "is_correct": True},
                                {"text": "2œÄr", "is_correct": False},
                                {"text": "œÄr", "is_correct": False},
                                {"text": "r¬≤", "is_correct": False}
                            ]
                        }
                    ]
                }
            ],
            "–§–∏–∑–∏–∫–∞": [
                {
                    "name": "–ú–µ—Ö–∞–Ω–∏–∫–∞",
                    "homework": "–ó–∞–∫–æ–Ω—ã –ù—å—é—Ç–æ–Ω–∞",
                    "questions": [
                        {
                            "text": "–ü–µ—Ä–≤—ã–π –∑–∞–∫–æ–Ω –ù—å—é—Ç–æ–Ω–∞ —Ç–∞–∫–∂–µ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è:",
                            "microtopic": 1,  # –ú–µ—Ö–∞–Ω–∏–∫–∞
                            "answers": [
                                {"text": "–ó–∞–∫–æ–Ω –∏–Ω–µ—Ä—Ü–∏–∏", "is_correct": True},
                                {"text": "–ó–∞–∫–æ–Ω —Å–∏–ª—ã", "is_correct": False},
                                {"text": "–ó–∞–∫–æ–Ω –¥–µ–π—Å—Ç–≤–∏—è", "is_correct": False},
                                {"text": "–ó–∞–∫–æ–Ω –¥–≤–∏–∂–µ–Ω–∏—è", "is_correct": False}
                            ]
                        }
                    ]
                }
            ]
        }

        # –°–æ–∑–¥–∞–µ–º —É—Ä–æ–∫–∏ –∏ –î–ó
        for subject_name, lessons in lessons_data.items():
            if subject_name not in created_subjects:
                continue
                
            subject = created_subjects[subject_name]
            print(f"   üìö –°–æ–∑–¥–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–∞ '{subject_name}'...")
            
            for lesson_data in lessons:
                try:
                    # –°–æ–∑–¥–∞–µ–º —É—Ä–æ–∫
                    lesson = await LessonRepository.create(
                        name=lesson_data["name"],
                        subject_id=subject.id
                    )
                    print(f"      ‚úÖ –£—Ä–æ–∫ '{lesson.name}' —Å–æ–∑–¥–∞–Ω (ID: {lesson.id})")
                except ValueError as e:
                    # –£—Ä–æ–∫ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø–æ–ª—É—á–∞–µ–º –µ–≥–æ
                    existing_lessons = await LessonRepository.get_by_subject(subject.id)
                    lesson = next((l for l in existing_lessons if l.name == lesson_data["name"]), None)
                    if lesson:
                        print(f"      ‚ö†Ô∏è –£—Ä–æ–∫ '{lesson.name}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (ID: {lesson.id})")
                    else:
                        print(f"      ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —É—Ä–æ–∫–∞: {e}")
                        continue

                try:
                    # –°–æ–∑–¥–∞–µ–º –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ
                    homework = await HomeworkRepository.create(
                        name=lesson_data["homework"],
                        subject_id=subject.id,
                        lesson_id=lesson.id
                    )
                    print(f"      ‚úÖ –î–ó '{homework.name}' —Å–æ–∑–¥–∞–Ω–æ (ID: {homework.id})")
                except ValueError as e:
                    print(f"      ‚ö†Ô∏è –î–ó '{lesson_data['homework']}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                
                # –°–æ–∑–¥–∞–µ–º –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è –î–ó
                for question_data in lesson_data["questions"]:
                    question = await QuestionRepository.create(
                        homework_id=homework.id,
                        subject_id=subject.id,
                        text=question_data["text"],
                        microtopic_number=question_data["microtopic"],
                        time_limit=30  # 30 —Å–µ–∫—É–Ω–¥ –Ω–∞ –≤–æ–ø—Ä–æ—Å
                    )
                    print(f"         ‚úÖ –í–æ–ø—Ä–æ—Å —Å–æ–∑–¥–∞–Ω (ID: {question.id})")
                    
                    # –°–æ–∑–¥–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤
                    for answer_data in question_data["answers"]:
                        answer = await AnswerOptionRepository.create(
                            question_id=question.id,
                            text=answer_data["text"],
                            is_correct=answer_data["is_correct"]
                        )
                        print(f"            ‚úÖ –í–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞ —Å–æ–∑–¥–∞–Ω (ID: {answer.id})")

        # –°–æ–∑–¥–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –î–ó –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        print("   üìù –°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –î–ó...")
        
        additional_homework = [
            {
                "subject": "Python",
                "lesson_name": "–†–∞–±–æ—Ç–∞ —Å –¥–∞–Ω–Ω—ã–º–∏",
                "homework_name": "–Ω–æ–≤–æ–µ –¥–∑ 2",
                "questions": [
                    {
                        "text": "–ö–∞–∫–æ–π –º–µ—Ç–æ–¥ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ —Å–ø–∏—Å–æ–∫?",
                        "microtopic": 2,  # –¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö
                        "answers": [
                            {"text": "append()", "is_correct": True},
                            {"text": "add()", "is_correct": False},
                            {"text": "insert()", "is_correct": False},
                            {"text": "push()", "is_correct": False}
                        ]
                    },
                    {
                        "text": "–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –¥–ª–∏–Ω—É —Å–ø–∏—Å–∫–∞ –≤ Python?",
                        "microtopic": 2,  # –¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö
                        "answers": [
                            {"text": "len(list)", "is_correct": True},
                            {"text": "list.length", "is_correct": False},
                            {"text": "list.size()", "is_correct": False},
                            {"text": "count(list)", "is_correct": False}
                        ]
                    }
                ]
            }
        ]

        for hw_data in additional_homework:
            subject_name = hw_data["subject"]
            if subject_name not in created_subjects:
                continue
                
            subject = created_subjects[subject_name]
            
            try:
                # –°–æ–∑–¥–∞–µ–º —É—Ä–æ–∫
                lesson = await LessonRepository.create(
                    name=hw_data["lesson_name"],
                    subject_id=subject.id
                )
            except ValueError:
                # –£—Ä–æ–∫ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø–æ–ª—É—á–∞–µ–º –µ–≥–æ
                existing_lessons = await LessonRepository.get_by_subject(subject.id)
                lesson = next((l for l in existing_lessons if l.name == hw_data["lesson_name"]), None)
                if not lesson:
                    continue

            try:
                # –°–æ–∑–¥–∞–µ–º –î–ó
                homework = await HomeworkRepository.create(
                    name=hw_data["homework_name"],
                    subject_id=subject.id,
                    lesson_id=lesson.id
                )
                print(f"      ‚úÖ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –î–ó '{homework.name}' —Å–æ–∑–¥–∞–Ω–æ (ID: {homework.id})")
            except ValueError:
                print(f"      ‚ö†Ô∏è –î–ó '{hw_data['homework_name']}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                continue
            
            # –°–æ–∑–¥–∞–µ–º –≤–æ–ø—Ä–æ—Å—ã
            for question_data in hw_data["questions"]:
                question = await QuestionRepository.create(
                    homework_id=homework.id,
                    subject_id=subject.id,
                    text=question_data["text"],
                    microtopic_number=question_data["microtopic"],
                    time_limit=20  # 20 —Å–µ–∫—É–Ω–¥ –Ω–∞ –≤–æ–ø—Ä–æ—Å
                )
                
                # –°–æ–∑–¥–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤
                for answer_data in question_data["answers"]:
                    await AnswerOptionRepository.create(
                        question_id=question.id,
                        text=answer_data["text"],
                        is_correct=answer_data["is_correct"]
                    )

        print(f"üìù –°–æ–∑–¥–∞–Ω–∏–µ —É—Ä–æ–∫–æ–≤ –∏ –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —É—Ä–æ–∫–æ–≤ –∏ –î–ó: {e}")
