"""
–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
"""
from database import (
    UserRepository, StudentRepository, CuratorRepository, 
    TeacherRepository, ManagerRepository, GroupRepository
)


async def add_admin_roles(created_subjects, course_ent, course_it):
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Ä–æ–ª–µ–π –¥–ª—è –∞–¥–º–∏–Ω–æ–≤ —Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏"""
    try:
        # ID –∞–¥–º–∏–Ω–æ–≤ (—Ç–æ–ª—å–∫–æ –ê–Ω–¥—Ä–µ–π –ö–ª–∏–º–æ–≤ –ø–æ–ª—É—á–∞–µ—Ç –≤—Å–µ —Ä–æ–ª–∏)
        admin_ids = [955518340]
        admin_names = {
            955518340: "–ê–Ω–¥—Ä–µ–π –ö–ª–∏–º–æ–≤"
        }

        for admin_telegram_id in admin_ids:
            admin_name = admin_names[admin_telegram_id]
            print(f"üëë –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ–ª–µ–π –¥–ª—è –∞–¥–º–∏–Ω–∞: {admin_name}")

            # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è-–∞–¥–º–∏–Ω–∞
            admin_user = await UserRepository.get_by_telegram_id(admin_telegram_id)
            if not admin_user:
                print(f"   ‚ùå –ê–¥–º–∏–Ω —Å ID {admin_telegram_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                continue

            # 1. –î–æ–±–∞–≤–ª—è–µ–º —Ä–æ–ª—å —Å—Ç—É–¥–µ–Ω—Ç–∞
            print(f"   üéì –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª–∏ —Å—Ç—É–¥–µ–Ω—Ç–∞...")
            try:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø—Ä–æ—Ñ–∏–ª—å —Å—Ç—É–¥–µ–Ω—Ç–∞
                existing_student = await StudentRepository.get_by_user_id(admin_user.id)
                if not existing_student:
                    # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—É—é –≥—Ä—É–ø–ø—É –¥–ª—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏
                    math_groups = await GroupRepository.get_by_subject(created_subjects["–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞"].id)
                    if math_groups:
                        student = await StudentRepository.create(
                            user_id=admin_user.id,
                            tariff="premium"
                        )
                        # –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –∫ –≥—Ä—É–ø–ø–µ
                        await StudentRepository.set_groups(student.id, [math_groups[0].id])
                        print(f"      ‚úÖ –°–æ–∑–¥–∞–Ω –ø—Ä–æ—Ñ–∏–ª—å —Å—Ç—É–¥–µ–Ω—Ç–∞ (ID: {student.id}, –≥—Ä—É–ø–ø–∞: {math_groups[0].name})")
                    else:
                        print(f"      ‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –≥—Ä—É–ø–ø—ã –¥–ª—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏")
                else:
                    print(f"      ‚ö†Ô∏è –ü—Ä–æ—Ñ–∏–ª—å —Å—Ç—É–¥–µ–Ω—Ç–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (ID: {existing_student.id})")
            except Exception as e:
                print(f"      ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Ç—É–¥–µ–Ω—Ç–∞: {e}")

            # 2. –î–æ–±–∞–≤–ª—è–µ–º —Ä–æ–ª—å –∫—É—Ä–∞—Ç–æ—Ä–∞
            print(f"   üë®‚Äçüéì –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª–∏ –∫—É—Ä–∞—Ç–æ—Ä–∞...")
            try:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø—Ä–æ—Ñ–∏–ª—å –∫—É—Ä–∞—Ç–æ—Ä–∞
                existing_curator = await CuratorRepository.get_by_user_id(admin_user.id)
                if not existing_curator:
                    curator = await CuratorRepository.create(
                        user_id=admin_user.id,
                        course_id=course_ent.id,
                        subject_id=created_subjects["–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞"].id
                    )
                    print(f"      ‚úÖ –°–æ–∑–¥–∞–Ω –ø—Ä–æ—Ñ–∏–ª—å –∫—É—Ä–∞—Ç–æ—Ä–∞ (ID: {curator.id})")

                    # –î–æ–±–∞–≤–ª—è–µ–º –∫—É—Ä–∞—Ç–æ—Ä–∞ –≤ –≥—Ä—É–ø–ø—ã –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏
                    math_groups = await GroupRepository.get_by_subject(created_subjects["–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞"].id)
                    for group in math_groups[:2]:  # –î–æ–±–∞–≤–ª—è–µ–º –≤ –ø–µ—Ä–≤—ã–µ 2 –≥—Ä—É–ø–ø—ã
                        await CuratorRepository.add_curator_to_group(curator.id, group.id)
                        print(f"      ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É: {group.name}")
                else:
                    print(f"      ‚ö†Ô∏è –ü—Ä–æ—Ñ–∏–ª—å –∫—É—Ä–∞—Ç–æ—Ä–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (ID: {existing_curator.id})")
            except Exception as e:
                print(f"      ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫—É—Ä–∞—Ç–æ—Ä–∞: {e}")

            # 3. –î–æ–±–∞–≤–ª—è–µ–º —Ä–æ–ª—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
            print(f"   üë®‚Äçüè´ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è...")
            try:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø—Ä–æ—Ñ–∏–ª—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è
                existing_teacher = await TeacherRepository.get_by_user_id(admin_user.id)
                if not existing_teacher:
                    # –ü–æ–ª—É—á–∞–µ–º –≥—Ä—É–ø–ø—É Python –¥–ª—è IT –∫—É—Ä—Å–∞
                    python_groups = await GroupRepository.get_by_subject(created_subjects["Python"].id)
                    if python_groups:
                        teacher = await TeacherRepository.create(
                            user_id=admin_user.id,
                            course_id=course_it.id,
                            subject_id=created_subjects["Python"].id
                        )

                        # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É —á–µ—Ä–µ–∑ M2M —Å–≤—è–∑—å
                        success = await TeacherRepository.add_teacher_to_group(teacher.id, python_groups[0].id)
                        if success:
                            print(f"      ‚úÖ –°–æ–∑–¥–∞–Ω –ø—Ä–æ—Ñ–∏–ª—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è (ID: {teacher.id}, –ø—Ä–µ–¥–º–µ—Ç: Python, –≥—Ä—É–ø–ø–∞: {python_groups[0].name})")
                        else:
                            print(f"      ‚ö†Ô∏è –ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω, –Ω–æ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–≤—è–∑–∞—Ç—å –∫ –≥—Ä—É–ø–ø–µ {python_groups[0].name}")
                    else:
                        print(f"      ‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –≥—Ä—É–ø–ø—ã –¥–ª—è Python")
                else:
                    print(f"      ‚ö†Ô∏è –ü—Ä–æ—Ñ–∏–ª—å –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (ID: {existing_teacher.id})")
            except Exception as e:
                print(f"      ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è: {e}")

            # 4. –î–æ–±–∞–≤–ª—è–µ–º —Ä–æ–ª—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞
            print(f"   üëî –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞...")
            try:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø—Ä–æ—Ñ–∏–ª—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞
                existing_manager = await ManagerRepository.get_by_user_id(admin_user.id)
                if not existing_manager:
                    manager = await ManagerRepository.create(user_id=admin_user.id)
                    print(f"      ‚úÖ –°–æ–∑–¥–∞–Ω –ø—Ä–æ—Ñ–∏–ª—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞ (ID: {manager.id})")
                else:
                    print(f"      ‚ö†Ô∏è –ü—Ä–æ—Ñ–∏–ª—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (ID: {existing_manager.id})")
            except Exception as e:
                print(f"      ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞: {e}")

            print(f"   üéâ –í—Å–µ —Ä–æ–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –¥–ª—è {admin_name}")

        print(f"üëë –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ–ª–µ–π –¥–ª—è –≤—Å–µ—Ö –∞–¥–º–∏–Ω–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ä–æ–ª–µ–π –∞–¥–º–∏–Ω–∞–º: {e}")
