"""
–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤—Ö–æ–¥–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤ –∫—É—Ä—Å–∞
"""
from database import (
    CourseEntryTestResultRepository, StudentRepository, SubjectRepository
)


async def create_course_entry_test_results():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤—Ö–æ–¥–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤ –∫—É—Ä—Å–∞"""
    try:
        print("üìä –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤—Ö–æ–¥–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤ –∫—É—Ä—Å–∞...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        existing_results = await CourseEntryTestResultRepository.get_all()
        if existing_results:
            print("   ‚ö†Ô∏è –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—Ö–æ–¥–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤ –∫—É—Ä—Å–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ")
            return
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏ –ø—Ä–µ–¥–º–µ—Ç—ã
        students = await StudentRepository.get_all()
        subjects = await SubjectRepository.get_all()
        
        if not students or not subjects:
            print("   ‚ö†Ô∏è –°—Ç—É–¥–µ–Ω—Ç—ã –∏–ª–∏ –ø—Ä–µ–¥–º–µ—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
            return
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
        test_cases = [
            {
                "student_name": "–ê—Ä—É–∂–∞–Ω –ê—Ö–º–µ—Ç–æ–≤–∞",
                "subject_name": "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
                "correct_percentage": 80,  # 80% –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
            },
            {
                "student_name": "–ï—Ä–∞—Å—ã–ª –ú—É—Ö–∞–º–µ–¥–æ–≤", 
                "subject_name": "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
                "correct_percentage": 60,  # 60% –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
            },
            {
                "student_name": "–ú—É—Ö–∞–Ω–±–µ—Ç–∂–∞–Ω –û–ª–∂–∞—Å",
                "subject_name": "Python",
                "correct_percentage": 93,  # 93% –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
            },
            {
                "student_name": "–ú—É—Ö–∞–Ω–±–µ—Ç–∂–∞–Ω –û–ª–∂–∞—Å",
                "subject_name": "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞", 
                "correct_percentage": 75,  # 75% –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
            },
            {
                "student_name": "–ë–µ–∫–∑–∞—Ç –°–µ—Ä–∏–∫–æ–≤",
                "subject_name": "Python",
                "correct_percentage": 85,  # 85% –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
            }
        ]
        
        created_count = 0
        
        for test_case in test_cases:
            # –ù–∞—Ö–æ–¥–∏–º —Å—Ç—É–¥–µ–Ω—Ç–∞
            student = None
            for s in students:
                if s.user.name == test_case["student_name"]:
                    student = s
                    break
            
            if not student:
                print(f"   ‚ö†Ô∏è –°—Ç—É–¥–µ–Ω—Ç '{test_case['student_name']}' –Ω–µ –Ω–∞–π–¥–µ–Ω")
                continue
            
            # –ù–∞—Ö–æ–¥–∏–º –ø—Ä–µ–¥–º–µ—Ç
            subject = None
            for subj in subjects:
                if subj.name == test_case["subject_name"]:
                    subject = subj
                    break
            
            if not subject:
                print(f"   ‚ö†Ô∏è –ü—Ä–µ–¥–º–µ—Ç '{test_case['subject_name']}' –Ω–µ –Ω–∞–π–¥–µ–Ω")
                continue
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è —ç—Ç–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞ –∏ –ø—Ä–µ–¥–º–µ—Ç–∞
            existing_result = await CourseEntryTestResultRepository.get_by_student_and_subject(
                student.id, subject.id
            )
            
            if existing_result:
                print(f"   ‚ö†Ô∏è –†–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è {student.user.name} –ø–æ {subject.name} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
                continue
            
            # –ü–æ–ª—É—á–∞–µ–º –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–∞ (–¥–æ 30 —à—Ç—É–∫)
            questions = await CourseEntryTestResultRepository.get_random_questions_for_subject(
                subject.id, 30
            )
            
            if len(questions) == 0:
                print(f"   ‚ö†Ô∏è –ù–µ—Ç –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è –ø—Ä–µ–¥–º–µ—Ç–∞ '{subject.name}'")
                continue
            
            total_questions = len(questions)
            target_correct = int((test_case["correct_percentage"] / 100) * total_questions)
            
            # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤
            question_results = []
            
            for i, question in enumerate(questions):
                # –ü–µ—Ä–≤—ã–µ target_correct –≤–æ–ø—Ä–æ—Å–æ–≤ - –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ, –æ—Å—Ç–∞–ª—å–Ω—ã–µ - –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ
                is_correct = i < target_correct
                
                # –í—ã–±–∏—Ä–∞–µ–º –æ—Ç–≤–µ—Ç
                correct_answer = None
                wrong_answer = None
                
                for answer in question.answer_options:
                    if answer.is_correct:
                        correct_answer = answer
                    else:
                        wrong_answer = answer
                
                selected_answer = correct_answer if is_correct else wrong_answer
                
                question_results.append({
                    'question_id': question.id,
                    'selected_answer_id': selected_answer.id if selected_answer else None,
                    'is_correct': is_correct,
                    'time_spent': 20 + i,  # –†–∞–∑–Ω–æ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞
                    'microtopic_number': question.microtopic_number
                })
            
            # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞
            try:
                test_result = await CourseEntryTestResultRepository.create_test_result(
                    student_id=student.id,
                    subject_id=subject.id,
                    question_results=question_results
                )
                
                print(f"   ‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –≤—Ö–æ–¥–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ —Å–æ–∑–¥–∞–Ω –¥–ª—è {student.user.name} –ø–æ –ø—Ä–µ–¥–º–µ—Ç—É {subject.name} ({test_result.score_percentage}%, {test_result.correct_answers}/{test_result.total_questions})")
                created_count += 1
                
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –¥–ª—è {student.user.name}: {e}")
        
        print(f"üìä –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤—Ö–æ–¥–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤ –∫—É—Ä—Å–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –°–æ–∑–¥–∞–Ω–æ: {created_count}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –≤—Ö–æ–¥–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤ –∫—É—Ä—Å–∞: {e}")
