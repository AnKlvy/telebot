"""
–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–ª–æ–≤ –∏ —É—Ä–æ–≤–Ω–µ–π —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
"""
from database import StudentRepository


async def update_all_student_points():
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–ª–æ–≤ –∏ —É—Ä–æ–≤–Ω–µ–π –≤—Å–µ—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
        students = await StudentRepository.get_all()
        
        if not students:
            print("   ‚ö†Ô∏è –°—Ç—É–¥–µ–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return
            
        updated_count = 0
        
        for student in students:
            try:
                # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ —Å—Ç—É–¥–µ–Ω—Ç–∞
                current_student = await StudentRepository.get_by_id(student.id)
                if not current_student:
                    continue

                # –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–ª—ã –∏ —É—Ä–æ–≤–µ–Ω—å –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –î–ó
                success = await StudentRepository.update_points_and_level(student.id)

                if success:
                    # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
                    updated_student = await StudentRepository.get_by_id(student.id)
                    if updated_student:
                        print(f"   ‚úÖ {updated_student.user.name}: {updated_student.points} –±–∞–ª–ª–æ–≤, —É—Ä–æ–≤–µ–Ω—å '{updated_student.level}'")
                        updated_count += 1
                    else:
                        print(f"   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–∞ {student.user.name}")
                else:
                    print(f"   ‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–∞ {student.user.name}")

            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç—É–¥–µ–Ω—Ç–∞ {student.user.name}: {e}")
                
        print(f"üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –û–±–Ω–æ–≤–ª–µ–Ω–æ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤: {updated_count}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –±–∞–ª–ª–æ–≤ –∏ —É—Ä–æ–≤–Ω–µ–π —Å—Ç—É–¥–µ–Ω—Ç–æ–≤: {e}")
