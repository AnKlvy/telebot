from aiogram.types import CallbackQuery
from aiogram.fsm.context import FSMContext
from .states import GroupStates
from .keyboards import get_groups_kb, get_students_kb, get_student_profile_kb
from common.keyboards import get_main_menu_back_button

async def show_groups(callback: CallbackQuery, state: FSMContext, role: str):
    """
    –ë–∞–∑–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å–ø–∏—Å–∫–∞ –≥—Ä—É–ø–ø

    Args:
        callback: –û–±—ä–µ–∫—Ç CallbackQuery
        state: –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM
        role: –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (curator)
    """
    # –ü–æ–ª—É—á–∞–µ–º telegram_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∫—É—Ä–∞—Ç–æ—Ä–∞ –∏ —É—á–∏—Ç–µ–ª—è
    user_telegram_id = callback.from_user.id if (role == "curator" or role == "teacher") else None

    print(f"üîç HANDLER: show_groups –¥–ª—è {role}, telegram_id={user_telegram_id}")

    await callback.message.edit_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:",
        reply_markup=await get_groups_kb(role, user_telegram_id)
    )

async def show_group_students(callback: CallbackQuery, state: FSMContext, role: str):
    """
    –ë–∞–∑–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å–ø–∏—Å–∫–∞ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –≥—Ä—É–ø–ø—ã

    Args:
        callback: –û–±—ä–µ–∫—Ç CallbackQuery
        state: –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM
        role: –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (curator, teacher)
    """
    current_state = await state.get_state()
    data = await state.get_data()

    print(f"üîç –õ–û–ì–ò–†–û–í–ê–ù–ò–ï show_group_students:")
    print(f"   üìû callback.data: {callback.data}")
    print(f"   üë§ user_id: {callback.from_user.id}")
    print(f"   üé≠ role: {role}")
    print(f"   üîÑ current_state: {current_state}")
    print(f"   üíæ FSM data: {data}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —ç—Ç–æ –Ω–æ–≤—ã–π –≤—ã–±–æ—Ä –≥—Ä—É–ø–ø—ã –∏–ª–∏ –≤–æ–∑–≤—Ä–∞—Ç –Ω–∞–∑–∞–¥
    if callback.data.startswith(f"{role}_group_"):
        # –ù–æ–≤—ã–π –≤—ã–±–æ—Ä –≥—Ä—É–ø–ø—ã
        group_id_str = callback.data.replace(f"{role}_group_", "")
        print(f"   ‚úÖ –ù–û–í–´–ô –í–´–ë–û–† –ì–†–£–ü–ü–´: {group_id_str}")
    elif callback.data == "back" and data.get('selected_group'):
        # –í–æ–∑–≤—Ä–∞—Ç –Ω–∞–∑–∞–¥, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        group_id_str = str(data.get('selected_group'))
        print(f"   üîÑ –í–û–ó–í–†–ê–¢ –ù–ê–ó–ê–î: –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—É—é –≥—Ä—É–ø–ø—É {group_id_str}")
    else:
        print(f"   ‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å group_id")
        print(f"   üìã callback.data –Ω–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å '{role}_group_' –∏ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π –≥—Ä—É–ø–ø—ã")
        await callback.message.edit_text(
            "‚ùå –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≥—Ä—É–ø–ø—É",
            reply_markup=get_main_menu_back_button()
        )
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ group_id —á–∏—Å–ª–æ–º (—Ä–µ–∞–ª—å–Ω—ã–π ID –∏–∑ –ë–î) –∏–ª–∏ —Å—Ç—Ä–æ–∫–æ–π (—Ö–∞—Ä–¥–∫–æ–¥)
    try:
        group_id = int(group_id_str)
        # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∞–ª—å–Ω—É—é –≥—Ä—É–ø–ø—É –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        from database import GroupRepository
        group = await GroupRepository.get_by_id(group_id)

        if group:
            group_name = f"{group.name}"
            if group.subject:
                group_name += f" ({group.subject.name})"
        else:
            group_name = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –≥—Ä—É–ø–ø–∞"

        print(f"   üìñ –ì—Ä—É–ø–ø–∞ –∏–∑ –ë–î: ID={group_id}, –ù–∞–∑–≤–∞–Ω–∏–µ={group_name}")

    except ValueError:
        # –≠—Ç–æ –Ω–µ —á–∏—Å–ª–æ–≤–æ–π ID - –æ—à–∏–±–∫–∞, —Ç–∞–∫ –∫–∞–∫ —Ö–∞—Ä–¥–∫–æ–¥ —É–±—Ä–∞–Ω
        print(f"   ‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π group_id: {group_id_str}. –û–∂–∏–¥–∞–µ—Ç—Å—è —á–∏—Å–ª–æ–≤–æ–π ID")
        await callback.message.edit_text(
            "‚ùå –û—à–∏–±–∫–∞: –Ω–µ–≤–µ—Ä–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –≥—Ä—É–ø–ø—ã",
            reply_markup=get_main_menu_back_button()
        )
        return

    await state.update_data(selected_group=group_id, group_name=group_name)
    print(f"   üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏: selected_group={group_id}, group_name={group_name}")

    await callback.message.edit_text(
        f"–ì—Ä—É–ø–ø–∞: {group_name}\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —É—á–µ–Ω–∏–∫–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:",
        reply_markup=await get_students_kb(role, group_id)
    )
    print(f"   ‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ, –ø–æ–∫–∞–∑–∞–Ω—ã —Å—Ç—É–¥–µ–Ω—Ç—ã –≥—Ä—É–ø–ø—ã {group_id}")

async def show_student_profile(callback: CallbackQuery, state: FSMContext, role: str):
    """
    –ë–∞–∑–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–∫–∞–∑–∞ –ø—Ä–æ—Ñ–∏–ª—è —Å—Ç—É–¥–µ–Ω—Ç–∞

    Args:
        callback: –û–±—ä–µ–∫—Ç CallbackQuery
        state: –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM
        role: –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (curator, teacher)
    """
    # –ü–æ–ª—É—á–∞–µ–º ID —Å—Ç—É–¥–µ–Ω—Ç–∞ –∏–∑ callback_data
    student_id_str = callback.data.replace(f"{role}_student_", "")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ student_id —á–∏—Å–ª–æ–º (—Ä–µ–∞–ª—å–Ω—ã–π ID –∏–∑ –ë–î) –∏–ª–∏ —Å—Ç—Ä–æ–∫–æ–π (—Ö–∞—Ä–¥–∫–æ–¥)
    try:
        student_id = int(student_id_str)
        # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∞–ª—å–Ω–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        from database import StudentRepository, HomeworkResultRepository

        student_obj = await StudentRepository.get_by_id(student_id)

        if student_obj:
            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å—Ç—É–¥–µ–Ω—Ç–∞
            homework_results = await HomeworkResultRepository.get_by_student(student_id)

            # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            total_homeworks = len(homework_results)
            total_points = sum(result.points_earned for result in homework_results)

            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —É—Ä–æ–≤–µ–Ω—å –Ω–∞ –æ—Å–Ω–æ–≤–µ –±–∞–ª–ª–æ–≤
            if total_points >= 1000:
                level = "üèÜ –ú–∞—Å—Ç–µ—Ä"
            elif total_points >= 500:
                level = "üî¨ –ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å"
            elif total_points >= 200:
                level = "üß™ –ü—Ä–∞–∫—Ç–∏–∫"
            else:
                level = "üìö –ù–æ–≤–∏—á–æ–∫"

            # –ü–æ—Å–ª–µ–¥–Ω–µ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–µ –î–ó
            last_homework_date = "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"
            if homework_results:
                last_result = max(homework_results, key=lambda x: x.completed_at)
                last_homework_date = last_result.completed_at.strftime("%d.%m.%Y")

            # –ü—Ä–æ—Ü–µ–Ω—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è (–ø—Ä–∏–º–µ—Ä–Ω—ã–π —Ä–∞—Å—á–µ—Ç)
            completion_percentage = min(100, total_homeworks * 5) if total_homeworks > 0 else 0

            student = {
                "name": student_obj.user.name,
                "telegram": f"@{student_obj.user.telegram_id}",
                "subject": student_obj.group.subject.name if student_obj.group and student_obj.group.subject else "–ù–µ —É–∫–∞–∑–∞–Ω",
                "points": total_points,
                "level": level,
                "homeworks_completed": total_homeworks,
                "last_homework_date": last_homework_date,
                "completion_percentage": completion_percentage
            }
        else:
            student = {
                "name": "–°—Ç—É–¥–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω",
                "telegram": "–ù–µ —É–∫–∞–∑–∞–Ω",
                "subject": "–ù–µ —É–∫–∞–∑–∞–Ω",
                "points": 0,
                "level": "–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω",
                "homeworks_completed": 0,
                "last_homework_date": "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö",
                "completion_percentage": 0
            }

    except (ValueError, Exception) as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–∞: {e}")
        # –•–∞—Ä–¥–∫–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å–æ —Å—Ç–∞—Ä—ã–º–∏ ID
        if student_id_str == "1":
            student = {
                "name": "–ê—Ä—É–∂–∞–Ω –ê—Ö–º–µ—Ç–æ–≤–∞",
                "telegram": "@aruzhan_chem",
                "subject": "–•–∏–º–∏—è",
                "points": 870,
                "level": "üß™ –ü—Ä–∞–∫—Ç–∏–∫",
                "homeworks_completed": 28,
                "last_homework_date": "14.05.2025",
                "completion_percentage": 30
            }
        elif student_id_str == "2":
            student = {
                "name": "–ú–∞–¥–∏—è—Ä –°–∞–ø–∞—Ä–æ–≤",
                "telegram": "@madiyar_bio",
                "subject": "–ë–∏–æ–ª–æ–≥–∏—è",
                "points": 920,
                "level": "üî¨ –ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å",
                "homeworks_completed": 32,
                "last_homework_date": "15.05.2025",
                "completion_percentage": 35
            }
        elif student_id_str == "3":
            student = {
                "name": "–î–∏–∞–Ω–∞ –ï—Ä–∂–∞–Ω–æ–≤–∞",
                "telegram": "@diana_history",
                "subject": "–ò—Å—Ç–æ—Ä–∏—è",
                "points": 750,
                "level": "üìö –¢–µ–æ—Ä–µ—Ç–∏–∫",
                "homeworks_completed": 25,
                "last_homework_date": "12.05.2025",
                "completion_percentage": 28
            }
        else:
            student = {
                "name": "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —É—á–µ–Ω–∏–∫",
                "telegram": "–ù–µ —É–∫–∞–∑–∞–Ω",
                "subject": "–ù–µ —É–∫–∞–∑–∞–Ω",
                "points": 0,
                "level": "–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω",
                "homeworks_completed": 0,
                "last_homework_date": "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö",
                "completion_percentage": 0
            }

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    await state.update_data(selected_student_id=student_id_str, student=student)

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    await callback.message.edit_text(
        f"üë§ {student['name']}\n"
        f"üìû Telegram: {student['telegram']}\n"
        f"üìö –ü—Ä–µ–¥–º–µ—Ç: {student['subject']}\n"
        f"üéØ –ë–∞–ª–ª—ã: {student['points']}\n"
        f"üìà –£—Ä–æ–≤–µ–Ω—å: {student['level']}\n"
        f"üìã –í—ã–ø–æ–ª–Ω–µ–Ω–æ –î–ó: {student['homeworks_completed']} (—Å —É—á–µ—Ç–æ–º –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö)\n"
        f"üïì –ü–æ—Å–ª–µ–¥–Ω–µ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–µ –î–ó: {student['last_homework_date']}\n"
        f"üïì% –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –î–ó: {student['completion_percentage']}%",
        reply_markup=get_student_profile_kb(role)
    )
