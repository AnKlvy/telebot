from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from typing import List

def get_test_subjects_kb(test_type: str) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏ –¥–ª—è —Ç–µ—Å—Ç–æ–≤
    
    Args:
        test_type: –¢–∏–ø —Ç–µ—Å—Ç–∞ (course_entry, month_entry, month_control)
    """
    subjects = [
        {"id": "kz", "name": "–ò—Å—Ç–æ—Ä–∏—è –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω–∞"},
        {"id": "mathlit", "name": "–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å"},
        {"id": "math", "name": "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞"},
        {"id": "geo", "name": "–ì–µ–æ–≥—Ä–∞—Ñ–∏—è"},
        {"id": "bio", "name": "–ë–∏–æ–ª–æ–≥–∏—è"},
        {"id": "chem", "name": "–•–∏–º–∏—è"},
        {"id": "inf", "name": "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞"},
        {"id": "world", "name": "–í—Å–µ–º–∏—Ä–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è"}
    ]
    
    buttons = []
    for subject in subjects:
        buttons.append([
            InlineKeyboardButton(
                text=subject["name"],
                callback_data=f"{test_type}_sub_{subject['id']}"
            )
        ])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
    buttons.append([
        InlineKeyboardButton(
            text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
            callback_data="back_to_tests"
        )
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_month_test_kb(test_type: str, subject_id: str) -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –º–µ—Å—è—Ü–∞–º–∏ –¥–ª—è —Ç–µ—Å—Ç–æ–≤
    
    Args:
        test_type: –¢–∏–ø —Ç–µ—Å—Ç–∞ (month_entry, month_control)
        subject_id: ID –ø—Ä–µ–¥–º–µ—Ç–∞
    """
    months = [
        {"id": "1", "name": "–°–µ–Ω—Ç—è–±—Ä—å"},
        {"id": "2", "name": "–û–∫—Ç—è–±—Ä—å"},
        {"id": "3", "name": "–ù–æ—è–±—Ä—å"},
        {"id": "4", "name": "–î–µ–∫–∞–±—Ä—å"},
        {"id": "5", "name": "–Ø–Ω–≤–∞—Ä—å"},
        {"id": "6", "name": "–§–µ–≤—Ä–∞–ª—å"},
        {"id": "7", "name": "–ú–∞—Ä—Ç"},
        {"id": "8", "name": "–ê–ø—Ä–µ–ª—å"},
        {"id": "9", "name": "–ú–∞–π"}
    ]
    
    buttons = []
    for month in months:
        buttons.append([
            InlineKeyboardButton(
                text=month["name"],
                callback_data=f"{test_type}_{subject_id}_month_{month['id']}"
            )
        ])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
    back_action = "back_to_month_entry_subjects" if test_type == "month_entry" else "back_to_month_control_subjects"
    buttons.append([
        InlineKeyboardButton(
            text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
            callback_data=back_action
        )
    ])
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_test_answers_kb() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤–æ–ø—Ä–æ—Å —Ç–µ—Å—Ç–∞"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="A", callback_data="answer_A")],
        [InlineKeyboardButton(text="B", callback_data="answer_B")],
        [InlineKeyboardButton(text="C", callback_data="answer_C")],
        [InlineKeyboardButton(text="D", callback_data="answer_D")]
    ])

def get_back_to_test_kb() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é —Ç–µ—Å—Ç–æ–≤"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ —Ç–µ—Å—Ç–∞–º", callback_data="back_to_tests")]
    ])

def get_tests_menu_kb() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é —Ç–µ—Å—Ç–æ–≤"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìù –í—Ö–æ–¥–Ω–æ–π —Ç–µ—Å—Ç –∫—É—Ä—Å–∞", callback_data="course_entry_test")],
        [InlineKeyboardButton(text="üìä –í—Ö–æ–¥–Ω–æ–π —Ç–µ—Å—Ç –º–µ—Å—è—Ü–∞", callback_data="month_entry_test")],
        [InlineKeyboardButton(text="üìà –ö–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–π —Ç–µ—Å—Ç –º–µ—Å—è—Ü–∞", callback_data="month_control_test")],
        [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")]
    ])