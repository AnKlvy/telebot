from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

from common.keyboards import get_main_menu_back_button, get_universal_back_button


def get_tests_statistics_menu_kb() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –º–µ–Ω—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ç–µ—Å—Ç–æ–≤"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üü¢ –í—Ö–æ–¥–Ω–æ–π —Ç–µ—Å—Ç –∫—É—Ä—Å–∞", callback_data="stats_course_entry_test")],
        [InlineKeyboardButton(text="üìÖ –í—Ö–æ–¥–Ω–æ–π —Ç–µ—Å—Ç –º–µ—Å—è—Ü–∞", callback_data="stats_month_entry_test")],
        [InlineKeyboardButton(text="üìÖ –ö–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–π —Ç–µ—Å—Ç –º–µ—Å—è—Ü–∞", callback_data="stats_month_control_test")],
        [InlineKeyboardButton(text="üß™ –ü—Ä–æ–±–Ω—ã–π –ï–ù–¢", callback_data="stats_ent_test")],
        *get_main_menu_back_button()
            ])

def get_groups_kb(test_type: str) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –≥—Ä—É–ø–ø–∞–º–∏ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ç–µ—Å—Ç–æ–≤ (—Å—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)"""
    # –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –≥—Ä—É–ø–ø—ã –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    groups = [
        {"id": "geo_intensive", "name": "–ò–Ω—Ç–µ–Ω—Å–∏–≤. –ì–µ–æ–≥—Ä–∞—Ñ–∏—è"},
        {"id": "math_intensive", "name": "–ò–Ω—Ç–µ–Ω—Å–∏–≤. –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞"}
    ]

    buttons = []
    for group in groups:
        buttons.append([
            InlineKeyboardButton(
                text=group["name"],
                callback_data=f"{test_type}_group_{group['id']}"
            )
        ])

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
    buttons.extend(get_main_menu_back_button())

    return InlineKeyboardMarkup(inline_keyboard=buttons)


async def get_curator_groups_kb(test_type: str, groups: list) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –≥—Ä—É–ø–ø–∞–º–∏ –∫—É—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ç–µ—Å—Ç–æ–≤"""
    buttons = []
    for group in groups:
        buttons.append([
            InlineKeyboardButton(
                text=f"{group.name} ({group.subject.name if group.subject else '–ë–µ–∑ –ø—Ä–µ–¥–º–µ—Ç–∞'})",
                callback_data=f"{test_type}_group_{group.id}"
            )
        ])

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
    buttons.extend(get_main_menu_back_button())

    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_month_kb(test_type: str, group_id: str) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –º–µ—Å—è—Ü–∞–º–∏ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ç–µ—Å—Ç–æ–≤"""
    months = [
        {"id": "1", "name": "1 –º–µ—Å—è—Ü"},
        {"id": "2", "name": "2 –º–µ—Å—è—Ü"},
        {"id": "3", "name": "3 –º–µ—Å—è—Ü"},
        {"id": "4", "name": "4 –º–µ—Å—è—Ü"},
        {"id": "5", "name": "5 –º–µ—Å—è—Ü"},
        {"id": "6", "name": "6 –º–µ—Å—è—Ü"},
        {"id": "7", "name": "7 –º–µ—Å—è—Ü"},
        {"id": "8", "name": "8 –º–µ—Å—è—Ü"},
        {"id": "9", "name": "9 –º–µ—Å—è—Ü"}
    ]
    
    buttons = []
    for month in months:
        buttons.append([
            InlineKeyboardButton(
                text=month["name"],
                callback_data=f"{test_type}_month_{group_id}_{month['id']}"
            )
        ])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
    buttons.extend(get_main_menu_back_button())
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_students_kb(test_type: str, group_id: str, month_id: str = None) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å—Ç—É–¥–µ–Ω—Ç–∞–º–∏ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ç–µ—Å—Ç–æ–≤"""
    # –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ —Å—Ç—É–¥–µ–Ω—Ç—ã –±—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å—Å—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    students = [
        {"id": "student1", "name": "–ú–∞–¥–∏—è—Ä –°–∞–ø–∞—Ä–æ–≤"},
        {"id": "student2", "name": "–ê—Ä—Ç–µ–º –û—Å–∏–ø–æ–≤"},
        {"id": "student3", "name": "–î–∏–∞–Ω–∞ –ù—É—Ä–ª–∞–Ω–æ–≤–∞"},
        {"id": "student4", "name": "–ê—Ä–º–∞–Ω –°–µ—Ä–∏–∫–æ–≤"}
    ]
    
    buttons = []
    for student in students:
        callback_data = f"{test_type}_student_{group_id}"
        if month_id:
            callback_data += f"_{month_id}"
        callback_data += f"_{student['id']}"
        
        buttons.append([
            InlineKeyboardButton(
                text=student["name"],
                callback_data=callback_data
            )
        ])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
    back_data = f"back_to_{test_type}_months_{group_id}" if month_id else f"back_to_{test_type}_groups"
    buttons.extend([
        [
        InlineKeyboardButton(
            text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
            callback_data=back_data
        )
    ],
    get_universal_back_button("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "back_to_main")])
    
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def get_back_kb() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ç–µ—Å—Ç–æ–≤"""
    return InlineKeyboardMarkup(inline_keyboard=[
    *get_main_menu_back_button()
            ])